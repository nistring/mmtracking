/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py:178: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use_env is set by default in torchrun.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
/home/work/.local/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/work/.local/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/work/.local/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/work/.SUIT/mmtracking/mmtrack/core/utils/misc.py:36: UserWarning: Setting MKL_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
/home/work/.SUIT/mmtracking/mmtrack/core/utils/misc.py:36: UserWarning: Setting MKL_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
/home/work/.SUIT/mmtracking/mmtrack/core/utils/misc.py:36: UserWarning: Setting MKL_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
/bin/dash: 1: x86_64-linux-gnu-gcc: not found
/bin/dash: 1: x86_64-linux-gnu-gcc: not found
/bin/dash: 1: x86_64-linux-gnu-gcc: not found
2023-11-15 15:15:34,402 - mmtrack - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.10 (default, May 26 2023, 14:05:08) [GCC 9.4.0]
CUDA available: True
GPU 0,1,2: CUDA GPU
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.2, V10.2.8
GCC: n/a
PyTorch: 1.10.1+cu102
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.2+cu102
OpenCV: 4.8.1
MMCV: 1.7.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.2
MMTracking: 0.14.0+e79491e
------------------------------------------------------------

2023-11-15 15:15:34,403 - mmtrack - INFO - Distributed training: True
2023-11-15 15:15:35,167 - mmtrack - INFO - Config:
model = dict(
    detector=dict(
        type='FasterRCNN',
        backbone=dict(
            type='ResNet',
            depth=50,
            num_stages=4,
            out_indices=(3, ),
            strides=(1, 2, 2, 1),
            dilations=(1, 1, 1, 2),
            frozen_stages=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            norm_eval=True,
            style='pytorch',
            init_cfg=dict(
                type='Pretrained', checkpoint='torchvision://resnet50')),
        neck=dict(
            type='ChannelMapper',
            in_channels=[2048],
            out_channels=512,
            kernel_size=3),
        rpn_head=dict(
            type='RPNHead',
            in_channels=512,
            feat_channels=512,
            anchor_generator=dict(
                type='AnchorGenerator',
                scales=[4, 8, 16, 32],
                ratios=[0.5, 1.0, 2.0],
                strides=[16]),
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[1.0, 1.0, 1.0, 1.0]),
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
            loss_bbox=dict(
                type='SmoothL1Loss', beta=0.1111111111111111,
                loss_weight=1.0)),
        roi_head=dict(
            type='SelsaRoIHead',
            bbox_roi_extractor=dict(
                type='TemporalRoIAlign',
                roi_layer=dict(
                    type='RoIAlign', output_size=7, sampling_ratio=2),
                out_channels=512,
                featmap_strides=[16],
                num_most_similar_points=2,
                num_temporal_attention_blocks=4),
            bbox_head=dict(
                type='SelsaBBoxHead',
                in_channels=512,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=30,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.2, 0.2, 0.2, 0.2]),
                reg_class_agnostic=False,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0),
                num_shared_fcs=3,
                aggregator=dict(
                    type='SelsaAggregator',
                    in_channels=1024,
                    num_attention_blocks=16))),
        train_cfg=dict(
            rpn=dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.3,
                    min_pos_iou=0.3,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=256,
                    pos_fraction=0.5,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=False),
                allowed_border=0,
                pos_weight=-1,
                debug=False),
            rpn_proposal=dict(
                nms_pre=6000,
                max_per_img=600,
                nms=dict(type='nms', iou_threshold=0.7),
                min_bbox_size=0),
            rcnn=dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=256,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False)),
        test_cfg=dict(
            rpn=dict(
                nms_pre=6000,
                max_per_img=300,
                nms=dict(type='nms', iou_threshold=0.7),
                min_bbox_size=0),
            rcnn=dict(
                score_thr=0.0001,
                nms=dict(type='nms', iou_threshold=0.5),
                max_per_img=100))),
    type='SELSA')
dataset_type = 'CocoVideoDataset'
classes = ('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD')
data_root = '../data/SUIT/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadMultiImagesFromFile'),
    dict(type='SeqLoadAnnotations', with_bbox=True, with_track=True),
    dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
    dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.5),
    dict(
        type='SeqNormalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='SeqPad', size_divisor=16),
    dict(
        type='VideoCollect',
        keys=['img', 'gt_bboxes', 'gt_labels', 'gt_instance_ids']),
    dict(type='ConcatVideoReferences'),
    dict(type='SeqDefaultFormatBundle', ref_prefix='ref')
]
test_pipeline = [
    dict(type='LoadMultiImagesFromFile'),
    dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
    dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.0),
    dict(
        type='SeqNormalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='SeqPad', size_divisor=16),
    dict(
        type='VideoCollect',
        keys=['img'],
        meta_keys=('num_left_ref_imgs', 'frame_stride')),
    dict(type='ConcatVideoReferences'),
    dict(type='MultiImagesToTensor', ref_prefix='ref'),
    dict(type='ToList')
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=5,
    train=dict(
        type='CocoVideoDataset',
        classes=('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD'),
        ann_file='../data/SUIT/annotations/train.json',
        img_prefix='../data/SUIT/Data/train/',
        ref_img_sampler=dict(
            num_ref_imgs=2,
            frame_range=9,
            filter_key_img=True,
            method='bilateral_uniform'),
        pipeline=[
            dict(type='LoadMultiImagesFromFile'),
            dict(type='SeqLoadAnnotations', with_bbox=True, with_track=True),
            dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.5),
            dict(
                type='SeqNormalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='SeqPad', size_divisor=16),
            dict(
                type='VideoCollect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_instance_ids']),
            dict(type='ConcatVideoReferences'),
            dict(type='SeqDefaultFormatBundle', ref_prefix='ref')
        ]),
    val=dict(
        type='CocoVideoDataset',
        classes=('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD'),
        ann_file='../data/SUIT/annotations/val.json',
        img_prefix='../data/SUIT/Data/val/',
        ref_img_sampler=dict(
            num_ref_imgs=14,
            frame_range=[-7, 7],
            method='test_with_adaptive_stride'),
        pipeline=[
            dict(type='LoadMultiImagesFromFile'),
            dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.0),
            dict(
                type='SeqNormalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='SeqPad', size_divisor=16),
            dict(
                type='VideoCollect',
                keys=['img'],
                meta_keys=('num_left_ref_imgs', 'frame_stride')),
            dict(type='ConcatVideoReferences'),
            dict(type='MultiImagesToTensor', ref_prefix='ref'),
            dict(type='ToList')
        ],
        test_mode=True),
    test=dict(
        type='CocoVideoDataset',
        classes=('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD'),
        ann_file='../data/SUIT/annotations/val.json',
        img_prefix='../data/SUIT/Data/val/',
        ref_img_sampler=dict(
            num_ref_imgs=14,
            frame_range=[-7, 7],
            method='test_with_adaptive_stride'),
        pipeline=[
            dict(type='LoadMultiImagesFromFile'),
            dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.0),
            dict(
                type='SeqNormalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='SeqPad', size_divisor=16),
            dict(
                type='VideoCollect',
                keys=['img'],
                meta_keys=('num_left_ref_imgs', 'frame_stride')),
            dict(type='ConcatVideoReferences'),
            dict(type='MultiImagesToTensor', ref_prefix='ref'),
            dict(type='ToList')
        ],
        test_mode=True))
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    step=[2, 5])
total_epochs = 7
evaluation = dict(metric=['bbox'], interval=7)
work_dir = './work_dirs/selsa_troialign_faster_rcnn_r50_dc5_7e_SUIT'
gpu_ids = range(0, 3)

2023-11-15 15:15:39,692 - mmtrack - INFO - Set random seed to 1621623273, deterministic: False
2023-11-15 15:15:41,987 - mmcv - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-15 15:15:41,987 - mmcv - INFO - load model from: torchvision://resnet50
2023-11-15 15:15:41,988 - mmcv - INFO - load checkpoint from torchvision path: torchvision://resnet50
2023-11-15 15:15:42,059 - mmcv - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-15 15:15:42,060 - mmcv - INFO - load model from: torchvision://resnet50
2023-11-15 15:15:42,064 - mmcv - INFO - load checkpoint from torchvision path: torchvision://resnet50
2023-11-15 15:15:42,075 - mmcv - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-15 15:15:42,075 - mmcv - INFO - load model from: torchvision://resnet50
2023-11-15 15:15:42,079 - mmcv - INFO - load checkpoint from torchvision path: torchvision://resnet50
2023-11-15 15:15:43,079 - mmcv - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2023-11-15 15:15:45,162 - mmcv - INFO - initialize ChannelMapper with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-15 15:15:45,269 - mmcv - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-15 15:15:45,397 - mmcv - INFO - initialize SelsaBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-15 15:15:45,556 - mmcv - INFO - initialize ChannelMapper with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-15 15:15:45,583 - mmcv - INFO - initialize ChannelMapper with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-15 15:15:45,656 - mmcv - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-15 15:15:45,685 - mmcv - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-15 15:15:45,776 - mmcv - INFO - initialize SelsaBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-15 15:15:45,828 - mmcv - INFO - initialize SelsaBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-15 15:15:49,090 - mmcv - INFO - 
detector.backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,091 - mmcv - INFO - 
detector.backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,091 - mmcv - INFO - 
detector.backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,091 - mmcv - INFO - 
detector.backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,091 - mmcv - INFO - 
detector.backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,092 - mmcv - INFO - 
detector.backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,092 - mmcv - INFO - 
detector.backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,092 - mmcv - INFO - 
detector.backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,093 - mmcv - INFO - 
detector.backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,093 - mmcv - INFO - 
detector.backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,093 - mmcv - INFO - 
detector.backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,093 - mmcv - INFO - 
detector.backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,094 - mmcv - INFO - 
detector.backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,094 - mmcv - INFO - 
detector.backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,094 - mmcv - INFO - 
detector.backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,094 - mmcv - INFO - 
detector.backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,095 - mmcv - INFO - 
detector.backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,095 - mmcv - INFO - 
detector.backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,095 - mmcv - INFO - 
detector.backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,095 - mmcv - INFO - 
detector.backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,096 - mmcv - INFO - 
detector.backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,096 - mmcv - INFO - 
detector.backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,096 - mmcv - INFO - 
detector.backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,096 - mmcv - INFO - 
detector.backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,097 - mmcv - INFO - 
detector.backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,097 - mmcv - INFO - 
detector.backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,097 - mmcv - INFO - 
detector.backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,097 - mmcv - INFO - 
detector.backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,098 - mmcv - INFO - 
detector.backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,098 - mmcv - INFO - 
detector.backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,098 - mmcv - INFO - 
detector.backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,099 - mmcv - INFO - 
detector.backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,099 - mmcv - INFO - 
detector.backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,099 - mmcv - INFO - 
detector.backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,099 - mmcv - INFO - 
detector.backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,100 - mmcv - INFO - 
detector.backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,100 - mmcv - INFO - 
detector.backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,100 - mmcv - INFO - 
detector.backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,100 - mmcv - INFO - 
detector.backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,101 - mmcv - INFO - 
detector.backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,111 - mmcv - INFO - 
detector.backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,117 - mmcv - INFO - 
detector.backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,117 - mmcv - INFO - 
detector.backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,123 - mmcv - INFO - 
detector.backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,123 - mmcv - INFO - 
detector.backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,123 - mmcv - INFO - 
detector.backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,123 - mmcv - INFO - 
detector.backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,123 - mmcv - INFO - 
detector.backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,124 - mmcv - INFO - 
detector.backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,124 - mmcv - INFO - 
detector.backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,124 - mmcv - INFO - 
detector.backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,124 - mmcv - INFO - 
detector.backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,125 - mmcv - INFO - 
detector.backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,125 - mmcv - INFO - 
detector.backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,125 - mmcv - INFO - 
detector.backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,125 - mmcv - INFO - 
detector.backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,126 - mmcv - INFO - 
detector.backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,126 - mmcv - INFO - 
detector.backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,126 - mmcv - INFO - 
detector.backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,126 - mmcv - INFO - 
detector.backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,127 - mmcv - INFO - 
detector.backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,127 - mmcv - INFO - 
detector.backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,127 - mmcv - INFO - 
detector.backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,128 - mmcv - INFO - 
detector.backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,128 - mmcv - INFO - 
detector.backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,128 - mmcv - INFO - 
detector.backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,128 - mmcv - INFO - 
detector.backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,129 - mmcv - INFO - 
detector.backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,129 - mmcv - INFO - 
detector.backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,129 - mmcv - INFO - 
detector.backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,129 - mmcv - INFO - 
detector.backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,130 - mmcv - INFO - 
detector.backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,130 - mmcv - INFO - 
detector.backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,130 - mmcv - INFO - 
detector.backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,130 - mmcv - INFO - 
detector.backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,130 - mmcv - INFO - 
detector.backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,131 - mmcv - INFO - 
detector.backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,131 - mmcv - INFO - 
detector.backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,131 - mmcv - INFO - 
detector.backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,131 - mmcv - INFO - 
detector.backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,132 - mmcv - INFO - 
detector.backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,132 - mmcv - INFO - 
detector.backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,132 - mmcv - INFO - 
detector.backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,132 - mmcv - INFO - 
detector.backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,133 - mmcv - INFO - 
detector.backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,133 - mmcv - INFO - 
detector.backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,133 - mmcv - INFO - 
detector.backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,134 - mmcv - INFO - 
detector.backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,134 - mmcv - INFO - 
detector.backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,134 - mmcv - INFO - 
detector.backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,134 - mmcv - INFO - 
detector.backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,134 - mmcv - INFO - 
detector.backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,135 - mmcv - INFO - 
detector.backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,135 - mmcv - INFO - 
detector.backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,135 - mmcv - INFO - 
detector.backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,135 - mmcv - INFO - 
detector.backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,136 - mmcv - INFO - 
detector.backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,136 - mmcv - INFO - 
detector.backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,136 - mmcv - INFO - 
detector.backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,136 - mmcv - INFO - 
detector.backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,137 - mmcv - INFO - 
detector.backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,137 - mmcv - INFO - 
detector.backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,137 - mmcv - INFO - 
detector.backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,137 - mmcv - INFO - 
detector.backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,137 - mmcv - INFO - 
detector.backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,138 - mmcv - INFO - 
detector.backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,138 - mmcv - INFO - 
detector.backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,138 - mmcv - INFO - 
detector.backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,139 - mmcv - INFO - 
detector.backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,139 - mmcv - INFO - 
detector.backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,139 - mmcv - INFO - 
detector.backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,140 - mmcv - INFO - 
detector.backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,140 - mmcv - INFO - 
detector.backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,140 - mmcv - INFO - 
detector.backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,140 - mmcv - INFO - 
detector.backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,141 - mmcv - INFO - 
detector.backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,141 - mmcv - INFO - 
detector.backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,141 - mmcv - INFO - 
detector.backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,141 - mmcv - INFO - 
detector.backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,142 - mmcv - INFO - 
detector.backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,142 - mmcv - INFO - 
detector.backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,142 - mmcv - INFO - 
detector.backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,142 - mmcv - INFO - 
detector.backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,143 - mmcv - INFO - 
detector.backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,143 - mmcv - INFO - 
detector.backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,143 - mmcv - INFO - 
detector.backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,144 - mmcv - INFO - 
detector.backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,144 - mmcv - INFO - 
detector.backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,144 - mmcv - INFO - 
detector.backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,144 - mmcv - INFO - 
detector.backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,145 - mmcv - INFO - 
detector.backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,145 - mmcv - INFO - 
detector.backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,145 - mmcv - INFO - 
detector.backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,145 - mmcv - INFO - 
detector.backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,146 - mmcv - INFO - 
detector.backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,146 - mmcv - INFO - 
detector.backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,146 - mmcv - INFO - 
detector.backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,146 - mmcv - INFO - 
detector.backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,147 - mmcv - INFO - 
detector.backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,147 - mmcv - INFO - 
detector.backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,147 - mmcv - INFO - 
detector.backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,147 - mmcv - INFO - 
detector.backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,148 - mmcv - INFO - 
detector.backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,148 - mmcv - INFO - 
detector.backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,148 - mmcv - INFO - 
detector.backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,149 - mmcv - INFO - 
detector.backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,149 - mmcv - INFO - 
detector.backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,149 - mmcv - INFO - 
detector.backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,149 - mmcv - INFO - 
detector.backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,150 - mmcv - INFO - 
detector.backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,150 - mmcv - INFO - 
detector.backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,150 - mmcv - INFO - 
detector.backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,151 - mmcv - INFO - 
detector.backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,151 - mmcv - INFO - 
detector.backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,151 - mmcv - INFO - 
detector.backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,152 - mmcv - INFO - 
detector.backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,152 - mmcv - INFO - 
detector.backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,152 - mmcv - INFO - 
detector.backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,153 - mmcv - INFO - 
detector.backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:15:49,153 - mmcv - INFO - 
detector.neck.convs.0.conv.weight - torch.Size([512, 2048, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,153 - mmcv - INFO - 
detector.neck.convs.0.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,153 - mmcv - INFO - 
detector.rpn_head.rpn_conv.weight - torch.Size([512, 512, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,154 - mmcv - INFO - 
detector.rpn_head.rpn_conv.bias - torch.Size([512]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,154 - mmcv - INFO - 
detector.rpn_head.rpn_cls.weight - torch.Size([12, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,154 - mmcv - INFO - 
detector.rpn_head.rpn_cls.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,154 - mmcv - INFO - 
detector.rpn_head.rpn_reg.weight - torch.Size([48, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,155 - mmcv - INFO - 
detector.rpn_head.rpn_reg.bias - torch.Size([48]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,155 - mmcv - INFO - 
detector.roi_head.bbox_roi_extractor.embed_network.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  
 
2023-11-15 15:15:49,155 - mmcv - INFO - 
detector.roi_head.bbox_roi_extractor.embed_network.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,155 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_cls.weight - torch.Size([31, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,156 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_cls.bias - torch.Size([31]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:15:49,156 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_reg.weight - torch.Size([120, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 
 
2023-11-15 15:15:49,156 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_reg.bias - torch.Size([120]): 
NormalInit: mean=0, std=0.001, bias=0 
 
2023-11-15 15:15:49,156 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 25088]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,157 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,157 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,157 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,157 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.2.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,158 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.2.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:15:49,158 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,158 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,158 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,159 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,159 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,159 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,159 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,160 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,160 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,160 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,160 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,161 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,161 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,161 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,162 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,162 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,162 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,162 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,162 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,163 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,163 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,163 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,163 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:15:49,164 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
Loading annotations into memory...
Done (t=0.04s)
creating index...
index created!
/home/work/.SUIT/mmtracking/mmtrack/datasets/pipelines/formatting.py:137: UserWarning: The 'ConcatVideoReferences' class will be deprecated in the future, please use 'ConcatSameTypeFrames' instead
  warnings.warn(
Loading annotations into memory...
Loading annotations into memory...
Done (t=0.02s)
creating index...
Done (t=0.02s)
creating index...
index created!
index created!
/home/work/.SUIT/mmtracking/mmtrack/datasets/pipelines/formatting.py:137: UserWarning: The 'ConcatVideoReferences' class will be deprecated in the future, please use 'ConcatSameTypeFrames' instead
  warnings.warn(
/home/work/.SUIT/mmtracking/mmtrack/datasets/pipelines/formatting.py:137: UserWarning: The 'ConcatVideoReferences' class will be deprecated in the future, please use 'ConcatSameTypeFrames' instead
  warnings.warn(
Loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
Traceback (most recent call last):
  File "tools/train.py", line 216, in <module>
    main()
  File "tools/train.py", line 205, in main
    train_model(
  File "/home/work/.SUIT/mmtracking/mmtrack/apis/train.py", line 150, in train_model
    val_dataloader = build_dataloader(
  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/builder.py", line 98, in build_dataloader
    sampler = DistributedVideoSampler(
  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/samplers/video_sampler.py", line 83, in __init__
    raise ValueError(
ValueError: only 1 videos loaded,but 3 gpus were given.
Loading annotations into memory...
Loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
Done (t=0.00s)
creating index...
index created!
Traceback (most recent call last):
  File "tools/train.py", line 216, in <module>
    main()
  File "tools/train.py", line 205, in main
    train_model(
  File "/home/work/.SUIT/mmtracking/mmtrack/apis/train.py", line 150, in train_model
Traceback (most recent call last):
  File "tools/train.py", line 216, in <module>
    val_dataloader = build_dataloader(
  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/builder.py", line 98, in build_dataloader
    main()
    sampler = DistributedVideoSampler(  File "tools/train.py", line 205, in main

  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/samplers/video_sampler.py", line 83, in __init__
    train_model(
  File "/home/work/.SUIT/mmtracking/mmtrack/apis/train.py", line 150, in train_model
    raise ValueError(
ValueError:     val_dataloader = build_dataloader(only 1 videos loaded,but 3 gpus were given.

  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/builder.py", line 98, in build_dataloader
    sampler = DistributedVideoSampler(
  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/samplers/video_sampler.py", line 83, in __init__
    raise ValueError(
ValueError: only 1 videos loaded,but 3 gpus were given.
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 61710) of binary: /usr/bin/python
Traceback (most recent call last):
  File "/usr/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py", line 193, in <module>
    main()
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py", line 189, in main
    launch(args)
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py", line 174, in launch
    run(args)
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
tools/train.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2023-11-15_15:15:54
  host      : main1
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 61711)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2023-11-15_15:15:54
  host      : main1
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 61712)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2023-11-15_15:15:54
  host      : main1
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 61710)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py:178: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use_env is set by default in torchrun.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
/home/work/.local/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/work/.SUIT/mmtracking/mmtrack/core/utils/misc.py:36: UserWarning: Setting MKL_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
/bin/dash: 1: x86_64-linux-gnu-gcc: not found
2023-11-15 15:24:04,477 - mmtrack - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.10 (default, May 26 2023, 14:05:08) [GCC 9.4.0]
CUDA available: True
GPU 0,1,2: CUDA GPU
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.2, V10.2.8
GCC: n/a
PyTorch: 1.10.1+cu102
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.2+cu102
OpenCV: 4.8.1
MMCV: 1.7.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.2
MMTracking: 0.14.0+e79491e
------------------------------------------------------------

2023-11-15 15:24:04,477 - mmtrack - INFO - Distributed training: True
2023-11-15 15:24:05,206 - mmtrack - INFO - Config:
model = dict(
    detector=dict(
        type='FasterRCNN',
        backbone=dict(
            type='ResNet',
            depth=50,
            num_stages=4,
            out_indices=(3, ),
            strides=(1, 2, 2, 1),
            dilations=(1, 1, 1, 2),
            frozen_stages=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            norm_eval=True,
            style='pytorch',
            init_cfg=dict(
                type='Pretrained', checkpoint='torchvision://resnet50')),
        neck=dict(
            type='ChannelMapper',
            in_channels=[2048],
            out_channels=512,
            kernel_size=3),
        rpn_head=dict(
            type='RPNHead',
            in_channels=512,
            feat_channels=512,
            anchor_generator=dict(
                type='AnchorGenerator',
                scales=[4, 8, 16, 32],
                ratios=[0.5, 1.0, 2.0],
                strides=[16]),
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[1.0, 1.0, 1.0, 1.0]),
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
            loss_bbox=dict(
                type='SmoothL1Loss', beta=0.1111111111111111,
                loss_weight=1.0)),
        roi_head=dict(
            type='SelsaRoIHead',
            bbox_roi_extractor=dict(
                type='TemporalRoIAlign',
                roi_layer=dict(
                    type='RoIAlign', output_size=7, sampling_ratio=2),
                out_channels=512,
                featmap_strides=[16],
                num_most_similar_points=2,
                num_temporal_attention_blocks=4),
            bbox_head=dict(
                type='SelsaBBoxHead',
                in_channels=512,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=30,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.2, 0.2, 0.2, 0.2]),
                reg_class_agnostic=False,
                loss_cls=dict(
                    type='CrossEntropyLoss',
                    use_sigmoid=False,
                    loss_weight=1.0),
                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0),
                num_shared_fcs=3,
                aggregator=dict(
                    type='SelsaAggregator',
                    in_channels=1024,
                    num_attention_blocks=16))),
        train_cfg=dict(
            rpn=dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.3,
                    min_pos_iou=0.3,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=256,
                    pos_fraction=0.5,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=False),
                allowed_border=0,
                pos_weight=-1,
                debug=False),
            rpn_proposal=dict(
                nms_pre=6000,
                max_per_img=600,
                nms=dict(type='nms', iou_threshold=0.7),
                min_bbox_size=0),
            rcnn=dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='RandomSampler',
                    num=256,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                pos_weight=-1,
                debug=False)),
        test_cfg=dict(
            rpn=dict(
                nms_pre=6000,
                max_per_img=300,
                nms=dict(type='nms', iou_threshold=0.7),
                min_bbox_size=0),
            rcnn=dict(
                score_thr=0.0001,
                nms=dict(type='nms', iou_threshold=0.5),
                max_per_img=100))),
    type='SELSA')
dataset_type = 'CocoVideoDataset'
classes = ('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD')
data_root = '../data/SUIT/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadMultiImagesFromFile'),
    dict(type='SeqLoadAnnotations', with_bbox=True, with_track=True),
    dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
    dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.5),
    dict(
        type='SeqNormalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='SeqPad', size_divisor=16),
    dict(
        type='VideoCollect',
        keys=['img', 'gt_bboxes', 'gt_labels', 'gt_instance_ids']),
    dict(type='ConcatVideoReferences'),
    dict(type='SeqDefaultFormatBundle', ref_prefix='ref')
]
test_pipeline = [
    dict(type='LoadMultiImagesFromFile'),
    dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
    dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.0),
    dict(
        type='SeqNormalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='SeqPad', size_divisor=16),
    dict(
        type='VideoCollect',
        keys=['img'],
        meta_keys=('num_left_ref_imgs', 'frame_stride')),
    dict(type='ConcatVideoReferences'),
    dict(type='MultiImagesToTensor', ref_prefix='ref'),
    dict(type='ToList')
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=4,
    train=dict(
        type='CocoVideoDataset',
        classes=('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD'),
        ann_file='../data/SUIT/annotations/train.json',
        img_prefix='../data/SUIT/Data/train/',
        ref_img_sampler=dict(
            num_ref_imgs=2,
            frame_range=9,
            filter_key_img=True,
            method='bilateral_uniform'),
        pipeline=[
            dict(type='LoadMultiImagesFromFile'),
            dict(type='SeqLoadAnnotations', with_bbox=True, with_track=True),
            dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.5),
            dict(
                type='SeqNormalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='SeqPad', size_divisor=16),
            dict(
                type='VideoCollect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_instance_ids']),
            dict(type='ConcatVideoReferences'),
            dict(type='SeqDefaultFormatBundle', ref_prefix='ref')
        ]),
    val=dict(
        type='CocoVideoDataset',
        classes=('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD'),
        ann_file='../data/SUIT/annotations/val.json',
        img_prefix='../data/SUIT/Data/val/',
        ref_img_sampler=dict(
            num_ref_imgs=14,
            frame_range=[-7, 7],
            method='test_with_adaptive_stride'),
        pipeline=[
            dict(type='LoadMultiImagesFromFile'),
            dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.0),
            dict(
                type='SeqNormalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='SeqPad', size_divisor=16),
            dict(
                type='VideoCollect',
                keys=['img'],
                meta_keys=('num_left_ref_imgs', 'frame_stride')),
            dict(type='ConcatVideoReferences'),
            dict(type='MultiImagesToTensor', ref_prefix='ref'),
            dict(type='ToList')
        ],
        test_mode=True),
    test=dict(
        type='CocoVideoDataset',
        classes=('c5', 'c6', 'c7', 'c8', 'UT', 'MT', 'LT', 'SSN', 'AD', 'PD'),
        ann_file='../data/SUIT/annotations/val.json',
        img_prefix='../data/SUIT/Data/val/',
        ref_img_sampler=dict(
            num_ref_imgs=14,
            frame_range=[-7, 7],
            method='test_with_adaptive_stride'),
        pipeline=[
            dict(type='LoadMultiImagesFromFile'),
            dict(type='SeqResize', img_scale=(1000, 600), keep_ratio=True),
            dict(type='SeqRandomFlip', share_params=True, flip_ratio=0.0),
            dict(
                type='SeqNormalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='SeqPad', size_divisor=16),
            dict(
                type='VideoCollect',
                keys=['img'],
                meta_keys=('num_left_ref_imgs', 'frame_stride')),
            dict(type='ConcatVideoReferences'),
            dict(type='MultiImagesToTensor', ref_prefix='ref'),
            dict(type='ToList')
        ],
        test_mode=True))
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    step=[2, 5])
total_epochs = 7
evaluation = dict(metric=['bbox'], interval=7)
work_dir = './work_dirs/selsa_troialign_faster_rcnn_r50_dc5_7e_SUIT'
gpu_ids = range(0, 1)

2023-11-15 15:24:05,206 - mmtrack - INFO - Set random seed to 944359438, deterministic: False
2023-11-15 15:24:06,121 - mmcv - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-15 15:24:06,121 - mmcv - INFO - load model from: torchvision://resnet50
2023-11-15 15:24:06,122 - mmcv - INFO - load checkpoint from torchvision path: torchvision://resnet50
2023-11-15 15:24:06,210 - mmcv - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2023-11-15 15:24:06,222 - mmcv - INFO - initialize ChannelMapper with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-15 15:24:06,284 - mmcv - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-15 15:24:06,318 - mmcv - INFO - initialize SelsaBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-15 15:24:06,579 - mmcv - INFO - 
detector.backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,579 - mmcv - INFO - 
detector.backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,579 - mmcv - INFO - 
detector.backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,579 - mmcv - INFO - 
detector.backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,580 - mmcv - INFO - 
detector.backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,580 - mmcv - INFO - 
detector.backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,580 - mmcv - INFO - 
detector.backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,580 - mmcv - INFO - 
detector.backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,581 - mmcv - INFO - 
detector.backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,581 - mmcv - INFO - 
detector.backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,581 - mmcv - INFO - 
detector.backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,582 - mmcv - INFO - 
detector.backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,582 - mmcv - INFO - 
detector.backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,582 - mmcv - INFO - 
detector.backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,582 - mmcv - INFO - 
detector.backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,583 - mmcv - INFO - 
detector.backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,583 - mmcv - INFO - 
detector.backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,583 - mmcv - INFO - 
detector.backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,584 - mmcv - INFO - 
detector.backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,584 - mmcv - INFO - 
detector.backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,584 - mmcv - INFO - 
detector.backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,584 - mmcv - INFO - 
detector.backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,585 - mmcv - INFO - 
detector.backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,585 - mmcv - INFO - 
detector.backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,585 - mmcv - INFO - 
detector.backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,585 - mmcv - INFO - 
detector.backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,586 - mmcv - INFO - 
detector.backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,586 - mmcv - INFO - 
detector.backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,586 - mmcv - INFO - 
detector.backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,586 - mmcv - INFO - 
detector.backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,587 - mmcv - INFO - 
detector.backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,587 - mmcv - INFO - 
detector.backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,587 - mmcv - INFO - 
detector.backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,588 - mmcv - INFO - 
detector.backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,588 - mmcv - INFO - 
detector.backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,588 - mmcv - INFO - 
detector.backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,589 - mmcv - INFO - 
detector.backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,589 - mmcv - INFO - 
detector.backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,589 - mmcv - INFO - 
detector.backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,589 - mmcv - INFO - 
detector.backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,590 - mmcv - INFO - 
detector.backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,590 - mmcv - INFO - 
detector.backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,590 - mmcv - INFO - 
detector.backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,590 - mmcv - INFO - 
detector.backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,591 - mmcv - INFO - 
detector.backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,591 - mmcv - INFO - 
detector.backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,591 - mmcv - INFO - 
detector.backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,592 - mmcv - INFO - 
detector.backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,592 - mmcv - INFO - 
detector.backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,592 - mmcv - INFO - 
detector.backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,592 - mmcv - INFO - 
detector.backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,593 - mmcv - INFO - 
detector.backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,593 - mmcv - INFO - 
detector.backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,593 - mmcv - INFO - 
detector.backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,593 - mmcv - INFO - 
detector.backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,594 - mmcv - INFO - 
detector.backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,594 - mmcv - INFO - 
detector.backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,594 - mmcv - INFO - 
detector.backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,594 - mmcv - INFO - 
detector.backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,595 - mmcv - INFO - 
detector.backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,595 - mmcv - INFO - 
detector.backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,595 - mmcv - INFO - 
detector.backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,595 - mmcv - INFO - 
detector.backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,595 - mmcv - INFO - 
detector.backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,596 - mmcv - INFO - 
detector.backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,596 - mmcv - INFO - 
detector.backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,596 - mmcv - INFO - 
detector.backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,596 - mmcv - INFO - 
detector.backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,597 - mmcv - INFO - 
detector.backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,597 - mmcv - INFO - 
detector.backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,597 - mmcv - INFO - 
detector.backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,598 - mmcv - INFO - 
detector.backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,598 - mmcv - INFO - 
detector.backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,598 - mmcv - INFO - 
detector.backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,598 - mmcv - INFO - 
detector.backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,599 - mmcv - INFO - 
detector.backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,599 - mmcv - INFO - 
detector.backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,599 - mmcv - INFO - 
detector.backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,599 - mmcv - INFO - 
detector.backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,600 - mmcv - INFO - 
detector.backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,600 - mmcv - INFO - 
detector.backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,600 - mmcv - INFO - 
detector.backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,600 - mmcv - INFO - 
detector.backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,601 - mmcv - INFO - 
detector.backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,601 - mmcv - INFO - 
detector.backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,601 - mmcv - INFO - 
detector.backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,601 - mmcv - INFO - 
detector.backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,602 - mmcv - INFO - 
detector.backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,602 - mmcv - INFO - 
detector.backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,602 - mmcv - INFO - 
detector.backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,602 - mmcv - INFO - 
detector.backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,603 - mmcv - INFO - 
detector.backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,603 - mmcv - INFO - 
detector.backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,603 - mmcv - INFO - 
detector.backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,604 - mmcv - INFO - 
detector.backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,604 - mmcv - INFO - 
detector.backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,604 - mmcv - INFO - 
detector.backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,604 - mmcv - INFO - 
detector.backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,605 - mmcv - INFO - 
detector.backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,605 - mmcv - INFO - 
detector.backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,605 - mmcv - INFO - 
detector.backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,605 - mmcv - INFO - 
detector.backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,606 - mmcv - INFO - 
detector.backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,606 - mmcv - INFO - 
detector.backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,606 - mmcv - INFO - 
detector.backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,606 - mmcv - INFO - 
detector.backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,607 - mmcv - INFO - 
detector.backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,607 - mmcv - INFO - 
detector.backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,607 - mmcv - INFO - 
detector.backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,607 - mmcv - INFO - 
detector.backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,608 - mmcv - INFO - 
detector.backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,608 - mmcv - INFO - 
detector.backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,608 - mmcv - INFO - 
detector.backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,608 - mmcv - INFO - 
detector.backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,608 - mmcv - INFO - 
detector.backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,609 - mmcv - INFO - 
detector.backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,609 - mmcv - INFO - 
detector.backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,609 - mmcv - INFO - 
detector.backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,609 - mmcv - INFO - 
detector.backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,610 - mmcv - INFO - 
detector.backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,610 - mmcv - INFO - 
detector.backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,610 - mmcv - INFO - 
detector.backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,611 - mmcv - INFO - 
detector.backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,611 - mmcv - INFO - 
detector.backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,611 - mmcv - INFO - 
detector.backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,611 - mmcv - INFO - 
detector.backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,611 - mmcv - INFO - 
detector.backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,612 - mmcv - INFO - 
detector.backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,612 - mmcv - INFO - 
detector.backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,612 - mmcv - INFO - 
detector.backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,612 - mmcv - INFO - 
detector.backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,613 - mmcv - INFO - 
detector.backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,613 - mmcv - INFO - 
detector.backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,613 - mmcv - INFO - 
detector.backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,613 - mmcv - INFO - 
detector.backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,614 - mmcv - INFO - 
detector.backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,614 - mmcv - INFO - 
detector.backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,614 - mmcv - INFO - 
detector.backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,614 - mmcv - INFO - 
detector.backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,614 - mmcv - INFO - 
detector.backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,615 - mmcv - INFO - 
detector.backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,615 - mmcv - INFO - 
detector.backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,615 - mmcv - INFO - 
detector.backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,615 - mmcv - INFO - 
detector.backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,616 - mmcv - INFO - 
detector.backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,616 - mmcv - INFO - 
detector.backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,616 - mmcv - INFO - 
detector.backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,616 - mmcv - INFO - 
detector.backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,617 - mmcv - INFO - 
detector.backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,617 - mmcv - INFO - 
detector.backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,617 - mmcv - INFO - 
detector.backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,617 - mmcv - INFO - 
detector.backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,618 - mmcv - INFO - 
detector.backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,618 - mmcv - INFO - 
detector.backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,618 - mmcv - INFO - 
detector.backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,618 - mmcv - INFO - 
detector.backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,619 - mmcv - INFO - 
detector.backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,619 - mmcv - INFO - 
detector.backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,619 - mmcv - INFO - 
detector.backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 
 
2023-11-15 15:24:06,619 - mmcv - INFO - 
detector.neck.convs.0.conv.weight - torch.Size([512, 2048, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,620 - mmcv - INFO - 
detector.neck.convs.0.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,620 - mmcv - INFO - 
detector.rpn_head.rpn_conv.weight - torch.Size([512, 512, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,620 - mmcv - INFO - 
detector.rpn_head.rpn_conv.bias - torch.Size([512]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,620 - mmcv - INFO - 
detector.rpn_head.rpn_cls.weight - torch.Size([12, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,620 - mmcv - INFO - 
detector.rpn_head.rpn_cls.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,621 - mmcv - INFO - 
detector.rpn_head.rpn_reg.weight - torch.Size([48, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,621 - mmcv - INFO - 
detector.rpn_head.rpn_reg.bias - torch.Size([48]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,621 - mmcv - INFO - 
detector.roi_head.bbox_roi_extractor.embed_network.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  
 
2023-11-15 15:24:06,622 - mmcv - INFO - 
detector.roi_head.bbox_roi_extractor.embed_network.conv.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,622 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_cls.weight - torch.Size([31, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,622 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_cls.bias - torch.Size([31]): 
NormalInit: mean=0, std=0.01, bias=0 
 
2023-11-15 15:24:06,622 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_reg.weight - torch.Size([120, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 
 
2023-11-15 15:24:06,623 - mmcv - INFO - 
detector.roi_head.bbox_head.fc_reg.bias - torch.Size([120]): 
NormalInit: mean=0, std=0.001, bias=0 
 
2023-11-15 15:24:06,623 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 25088]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,623 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,623 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,624 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,624 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.2.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,624 - mmcv - INFO - 
detector.roi_head.bbox_head.shared_fcs.2.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
 
2023-11-15 15:24:06,624 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,625 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,625 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,625 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,626 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,626 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,626 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,626 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.0.ref_fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,627 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,627 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,627 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,627 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,628 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,628 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,628 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,628 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.1.ref_fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,629 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,629 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,629 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc_embed.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,629 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc_embed.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,630 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,630 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,630 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
2023-11-15 15:24:06,630 - mmcv - INFO - 
detector.roi_head.bbox_head.aggregator.2.ref_fc.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SELSA  
 
Loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
/home/work/.SUIT/mmtracking/mmtrack/datasets/pipelines/formatting.py:137: UserWarning: The 'ConcatVideoReferences' class will be deprecated in the future, please use 'ConcatSameTypeFrames' instead
  warnings.warn(
Loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
2023-11-15 15:24:11,317 - mmtrack - INFO - Start running, host: work@main1, work_dir: /home/work/.SUIT/mmtracking/work_dirs/selsa_troialign_faster_rcnn_r50_dc5_7e_SUIT
2023-11-15 15:24:11,318 - mmtrack - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-11-15 15:24:11,318 - mmtrack - INFO - workflow: [('train', 1)], max: 7 epochs
2023-11-15 15:24:11,319 - mmtrack - INFO - Checkpoints will be saved to /home/work/.SUIT/mmtracking/work_dirs/selsa_troialign_faster_rcnn_r50_dc5_7e_SUIT by HardDiskBackend.
2023-11-15 15:24:14,179 - mmcv - INFO - Reducer buckets have been rebuilt in this iteration.
2023-11-15 15:24:27,123 - mmtrack - INFO - Epoch [1][50/1487]	lr: 3.987e-03, eta: 0:54:32, time: 0.316, data_time: 0.054, memory: 4202, loss_rpn_cls: 0.1741, loss_rpn_bbox: 0.0134, loss_cls: 0.3228, acc: 96.6066, loss_bbox: 0.0057, loss: 0.5160, grad_norm: 4.4706
2023-11-15 15:24:40,601 - mmtrack - INFO - Epoch [1][100/1487]	lr: 4.653e-03, eta: 0:50:18, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0844, loss_rpn_bbox: 0.0112, loss_cls: 0.1919, acc: 97.4062, loss_bbox: 0.0261, loss: 0.3136, grad_norm: 3.1204
2023-11-15 15:24:54,036 - mmtrack - INFO - Epoch [1][150/1487]	lr: 5.320e-03, eta: 0:48:41, time: 0.269, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0878, loss_rpn_bbox: 0.0136, loss_cls: 0.2026, acc: 96.9688, loss_bbox: 0.0310, loss: 0.3351, grad_norm: 2.5303
2023-11-15 15:25:07,550 - mmtrack - INFO - Epoch [1][200/1487]	lr: 5.987e-03, eta: 0:47:49, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0710, loss_rpn_bbox: 0.0080, loss_cls: 0.2731, acc: 95.9844, loss_bbox: 0.0423, loss: 0.3944, grad_norm: 2.5787
2023-11-15 15:25:21,226 - mmtrack - INFO - Epoch [1][250/1487]	lr: 6.653e-03, eta: 0:47:20, time: 0.274, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0766, loss_rpn_bbox: 0.0109, loss_cls: 0.2228, acc: 96.7578, loss_bbox: 0.0373, loss: 0.3477, grad_norm: 2.3951
2023-11-15 15:25:34,763 - mmtrack - INFO - Epoch [1][300/1487]	lr: 7.320e-03, eta: 0:46:51, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0869, loss_rpn_bbox: 0.0121, loss_cls: 0.2881, acc: 95.2734, loss_bbox: 0.0634, loss: 0.4505, grad_norm: 2.5704
2023-11-15 15:25:48,351 - mmtrack - INFO - Epoch [1][350/1487]	lr: 7.987e-03, eta: 0:46:28, time: 0.272, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0668, loss_rpn_bbox: 0.0113, loss_cls: 0.2912, acc: 95.4375, loss_bbox: 0.0526, loss: 0.4218, grad_norm: 1.9758
2023-11-15 15:26:01,890 - mmtrack - INFO - Epoch [1][400/1487]	lr: 8.653e-03, eta: 0:46:06, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0751, loss_rpn_bbox: 0.0103, loss_cls: 0.3705, acc: 93.6719, loss_bbox: 0.0797, loss: 0.5356, grad_norm: 2.6676
2023-11-15 15:26:15,385 - mmtrack - INFO - Epoch [1][450/1487]	lr: 9.320e-03, eta: 0:45:45, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0608, loss_rpn_bbox: 0.0091, loss_cls: 0.3009, acc: 94.5078, loss_bbox: 0.0699, loss: 0.4406, grad_norm: 2.0527
2023-11-15 15:26:28,991 - mmtrack - INFO - Epoch [1][500/1487]	lr: 9.987e-03, eta: 0:45:28, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0711, loss_rpn_bbox: 0.0092, loss_cls: 0.3341, acc: 93.6484, loss_bbox: 0.0836, loss: 0.4980, grad_norm: 2.2453
2023-11-15 15:26:42,654 - mmtrack - INFO - Epoch [1][550/1487]	lr: 1.000e-02, eta: 0:45:12, time: 0.273, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0722, loss_rpn_bbox: 0.0104, loss_cls: 0.3343, acc: 93.1328, loss_bbox: 0.0923, loss: 0.5092, grad_norm: 2.9564
2023-11-15 15:26:56,139 - mmtrack - INFO - Epoch [1][600/1487]	lr: 1.000e-02, eta: 0:44:54, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0645, loss_rpn_bbox: 0.0105, loss_cls: 0.3511, acc: 93.3906, loss_bbox: 0.0823, loss: 0.5083, grad_norm: 2.7476
2023-11-15 15:27:09,622 - mmtrack - INFO - Epoch [1][650/1487]	lr: 1.000e-02, eta: 0:44:36, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0662, loss_rpn_bbox: 0.0089, loss_cls: 0.3018, acc: 93.7891, loss_bbox: 0.0700, loss: 0.4469, grad_norm: 2.3375
2023-11-15 15:27:23,214 - mmtrack - INFO - Epoch [1][700/1487]	lr: 1.000e-02, eta: 0:44:21, time: 0.272, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0618, loss_rpn_bbox: 0.0077, loss_cls: 0.3525, acc: 92.3125, loss_bbox: 0.0976, loss: 0.5197, grad_norm: 2.3205
2023-11-15 15:27:36,803 - mmtrack - INFO - Epoch [1][750/1487]	lr: 1.000e-02, eta: 0:44:06, time: 0.272, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0745, loss_rpn_bbox: 0.0092, loss_cls: 0.3277, acc: 92.9375, loss_bbox: 0.0882, loss: 0.4996, grad_norm: 2.3356
2023-11-15 15:27:50,267 - mmtrack - INFO - Epoch [1][800/1487]	lr: 1.000e-02, eta: 0:43:49, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0569, loss_rpn_bbox: 0.0076, loss_cls: 0.3337, acc: 92.0078, loss_bbox: 0.0960, loss: 0.4942, grad_norm: 2.0744
2023-11-15 15:28:03,840 - mmtrack - INFO - Epoch [1][850/1487]	lr: 1.000e-02, eta: 0:43:34, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0589, loss_rpn_bbox: 0.0079, loss_cls: 0.3201, acc: 92.6875, loss_bbox: 0.0988, loss: 0.4857, grad_norm: 2.2467
2023-11-15 15:28:17,394 - mmtrack - INFO - Epoch [1][900/1487]	lr: 1.000e-02, eta: 0:43:19, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0533, loss_rpn_bbox: 0.0070, loss_cls: 0.3570, acc: 91.9219, loss_bbox: 0.1079, loss: 0.5252, grad_norm: 1.9937
2023-11-15 15:28:30,917 - mmtrack - INFO - Epoch [1][950/1487]	lr: 1.000e-02, eta: 0:43:04, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0566, loss_rpn_bbox: 0.0075, loss_cls: 0.3211, acc: 92.2812, loss_bbox: 0.1015, loss: 0.4867, grad_norm: 2.0988
2023-11-15 15:28:44,438 - mmtrack - INFO - Epoch [1][1000/1487]	lr: 1.000e-02, eta: 0:42:49, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0595, loss_rpn_bbox: 0.0069, loss_cls: 0.3502, acc: 91.7031, loss_bbox: 0.1037, loss: 0.5203, grad_norm: 2.2385
2023-11-15 15:28:58,002 - mmtrack - INFO - Epoch [1][1050/1487]	lr: 1.000e-02, eta: 0:42:35, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0586, loss_rpn_bbox: 0.0068, loss_cls: 0.2845, acc: 92.6719, loss_bbox: 0.0884, loss: 0.4383, grad_norm: 1.9966
2023-11-15 15:29:11,527 - mmtrack - INFO - Epoch [1][1100/1487]	lr: 1.000e-02, eta: 0:42:20, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0603, loss_rpn_bbox: 0.0071, loss_cls: 0.3215, acc: 92.0859, loss_bbox: 0.1009, loss: 0.4899, grad_norm: 1.9927
2023-11-15 15:29:25,128 - mmtrack - INFO - Epoch [1][1150/1487]	lr: 1.000e-02, eta: 0:42:06, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0608, loss_rpn_bbox: 0.0066, loss_cls: 0.2934, acc: 92.8516, loss_bbox: 0.0852, loss: 0.4460, grad_norm: 1.8968
2023-11-15 15:29:38,654 - mmtrack - INFO - Epoch [1][1200/1487]	lr: 1.000e-02, eta: 0:41:51, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0525, loss_rpn_bbox: 0.0094, loss_cls: 0.3286, acc: 90.8438, loss_bbox: 0.1132, loss: 0.5037, grad_norm: 2.0654
2023-11-15 15:29:52,153 - mmtrack - INFO - Epoch [1][1250/1487]	lr: 1.000e-02, eta: 0:41:37, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0551, loss_rpn_bbox: 0.0057, loss_cls: 0.2859, acc: 92.8359, loss_bbox: 0.0841, loss: 0.4308, grad_norm: 2.1911
2023-11-15 15:30:05,718 - mmtrack - INFO - Epoch [1][1300/1487]	lr: 1.000e-02, eta: 0:41:23, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0493, loss_rpn_bbox: 0.0064, loss_cls: 0.3471, acc: 90.7031, loss_bbox: 0.1124, loss: 0.5153, grad_norm: 2.3021
2023-11-15 15:30:19,166 - mmtrack - INFO - Epoch [1][1350/1487]	lr: 1.000e-02, eta: 0:41:08, time: 0.269, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0406, loss_rpn_bbox: 0.0064, loss_cls: 0.3114, acc: 92.3594, loss_bbox: 0.0902, loss: 0.4487, grad_norm: 2.0755
2023-11-15 15:30:32,667 - mmtrack - INFO - Epoch [1][1400/1487]	lr: 1.000e-02, eta: 0:40:53, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0451, loss_rpn_bbox: 0.0053, loss_cls: 0.3592, acc: 90.8828, loss_bbox: 0.1054, loss: 0.5150, grad_norm: 2.3101
2023-11-15 15:30:46,240 - mmtrack - INFO - Epoch [1][1450/1487]	lr: 1.000e-02, eta: 0:40:39, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0501, loss_rpn_bbox: 0.0064, loss_cls: 0.3035, acc: 91.4141, loss_bbox: 0.0940, loss: 0.4541, grad_norm: 2.0631
2023-11-15 15:30:56,187 - mmtrack - INFO - Saving checkpoint at 1 epochs
2023-11-15 15:31:14,648 - mmtrack - INFO - Epoch [2][50/1487]	lr: 1.000e-02, eta: 0:39:32, time: 0.322, data_time: 0.054, memory: 4202, loss_rpn_cls: 0.0458, loss_rpn_bbox: 0.0058, loss_cls: 0.2940, acc: 92.4297, loss_bbox: 0.0861, loss: 0.4317, grad_norm: 1.8851
2023-11-15 15:31:28,201 - mmtrack - INFO - Epoch [2][100/1487]	lr: 1.000e-02, eta: 0:39:20, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0596, loss_rpn_bbox: 0.0079, loss_cls: 0.3025, acc: 91.2188, loss_bbox: 0.1032, loss: 0.4732, grad_norm: 2.2443
2023-11-15 15:31:41,744 - mmtrack - INFO - Epoch [2][150/1487]	lr: 1.000e-02, eta: 0:39:07, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0544, loss_rpn_bbox: 0.0070, loss_cls: 0.2707, acc: 92.9375, loss_bbox: 0.0867, loss: 0.4188, grad_norm: 1.8779
2023-11-15 15:31:55,212 - mmtrack - INFO - Epoch [2][200/1487]	lr: 1.000e-02, eta: 0:38:54, time: 0.269, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0397, loss_rpn_bbox: 0.0065, loss_cls: 0.2679, acc: 92.3438, loss_bbox: 0.0917, loss: 0.4057, grad_norm: 1.9528
2023-11-15 15:32:08,696 - mmtrack - INFO - Epoch [2][250/1487]	lr: 1.000e-02, eta: 0:38:41, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0365, loss_rpn_bbox: 0.0051, loss_cls: 0.2979, acc: 91.4531, loss_bbox: 0.1028, loss: 0.4423, grad_norm: 2.0933
2023-11-15 15:32:22,185 - mmtrack - INFO - Epoch [2][300/1487]	lr: 1.000e-02, eta: 0:38:28, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0480, loss_rpn_bbox: 0.0075, loss_cls: 0.2817, acc: 92.0312, loss_bbox: 0.1013, loss: 0.4384, grad_norm: 2.2336
2023-11-15 15:32:35,760 - mmtrack - INFO - Epoch [2][350/1487]	lr: 1.000e-02, eta: 0:38:16, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0448, loss_rpn_bbox: 0.0061, loss_cls: 0.3099, acc: 90.8906, loss_bbox: 0.1069, loss: 0.4677, grad_norm: 2.2138
2023-11-15 15:32:49,359 - mmtrack - INFO - Epoch [2][400/1487]	lr: 1.000e-02, eta: 0:38:03, time: 0.272, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0413, loss_rpn_bbox: 0.0060, loss_cls: 0.3251, acc: 90.1484, loss_bbox: 0.1076, loss: 0.4799, grad_norm: 2.5088
2023-11-15 15:33:02,934 - mmtrack - INFO - Epoch [2][450/1487]	lr: 1.000e-02, eta: 0:37:51, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0345, loss_rpn_bbox: 0.0051, loss_cls: 0.3016, acc: 91.5078, loss_bbox: 0.0986, loss: 0.4398, grad_norm: 2.3303
2023-11-15 15:33:16,431 - mmtrack - INFO - Epoch [2][500/1487]	lr: 1.000e-02, eta: 0:37:38, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0374, loss_rpn_bbox: 0.0053, loss_cls: 0.3179, acc: 90.9766, loss_bbox: 0.1002, loss: 0.4608, grad_norm: 2.3089
2023-11-15 15:33:30,005 - mmtrack - INFO - Epoch [2][550/1487]	lr: 1.000e-02, eta: 0:37:25, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0430, loss_rpn_bbox: 0.0068, loss_cls: 0.2810, acc: 91.5469, loss_bbox: 0.0927, loss: 0.4235, grad_norm: 2.0224
2023-11-15 15:33:43,460 - mmtrack - INFO - Epoch [2][600/1487]	lr: 1.000e-02, eta: 0:37:12, time: 0.269, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0406, loss_rpn_bbox: 0.0072, loss_cls: 0.3067, acc: 91.1406, loss_bbox: 0.0971, loss: 0.4515, grad_norm: 2.3909
2023-11-15 15:33:57,149 - mmtrack - INFO - Epoch [2][650/1487]	lr: 1.000e-02, eta: 0:37:00, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0376, loss_rpn_bbox: 0.0063, loss_cls: 0.2992, acc: 90.8906, loss_bbox: 0.1067, loss: 0.4498, grad_norm: 1.9902
2023-11-15 15:34:10,701 - mmtrack - INFO - Epoch [2][700/1487]	lr: 1.000e-02, eta: 0:36:47, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0379, loss_rpn_bbox: 0.0063, loss_cls: 0.2472, acc: 92.4609, loss_bbox: 0.0811, loss: 0.3725, grad_norm: 2.2005
2023-11-15 15:34:24,175 - mmtrack - INFO - Epoch [2][750/1487]	lr: 1.000e-02, eta: 0:36:33, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0363, loss_rpn_bbox: 0.0050, loss_cls: 0.2739, acc: 91.3906, loss_bbox: 0.0950, loss: 0.4103, grad_norm: 2.2293
2023-11-15 15:34:37,678 - mmtrack - INFO - Epoch [2][800/1487]	lr: 1.000e-02, eta: 0:36:20, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0460, loss_rpn_bbox: 0.0086, loss_cls: 0.2814, acc: 91.6172, loss_bbox: 0.0888, loss: 0.4247, grad_norm: 2.1271
2023-11-15 15:34:51,182 - mmtrack - INFO - Epoch [2][850/1487]	lr: 1.000e-02, eta: 0:36:07, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0472, loss_rpn_bbox: 0.0077, loss_cls: 0.2666, acc: 91.5703, loss_bbox: 0.0932, loss: 0.4147, grad_norm: 2.2531
2023-11-15 15:35:04,727 - mmtrack - INFO - Epoch [2][900/1487]	lr: 1.000e-02, eta: 0:35:54, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0585, loss_rpn_bbox: 0.0081, loss_cls: 0.3093, acc: 91.6875, loss_bbox: 0.0940, loss: 0.4699, grad_norm: 2.8757
2023-11-15 15:35:18,232 - mmtrack - INFO - Epoch [2][950/1487]	lr: 1.000e-02, eta: 0:35:41, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0379, loss_rpn_bbox: 0.0053, loss_cls: 0.2590, acc: 92.2188, loss_bbox: 0.0897, loss: 0.3919, grad_norm: 2.0032
2023-11-15 15:35:31,844 - mmtrack - INFO - Epoch [2][1000/1487]	lr: 1.000e-02, eta: 0:35:28, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0361, loss_rpn_bbox: 0.0060, loss_cls: 0.2798, acc: 90.9609, loss_bbox: 0.0929, loss: 0.4148, grad_norm: 2.3316
2023-11-15 15:35:45,336 - mmtrack - INFO - Epoch [2][1050/1487]	lr: 1.000e-02, eta: 0:35:15, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0317, loss_rpn_bbox: 0.0040, loss_cls: 0.2892, acc: 91.2812, loss_bbox: 0.0990, loss: 0.4238, grad_norm: 2.3247
2023-11-15 15:35:58,803 - mmtrack - INFO - Epoch [2][1100/1487]	lr: 1.000e-02, eta: 0:35:01, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0359, loss_rpn_bbox: 0.0048, loss_cls: 0.3065, acc: 90.8359, loss_bbox: 0.1039, loss: 0.4511, grad_norm: 2.3278
2023-11-15 15:36:12,336 - mmtrack - INFO - Epoch [2][1150/1487]	lr: 1.000e-02, eta: 0:34:48, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0405, loss_rpn_bbox: 0.0055, loss_cls: 0.2981, acc: 90.1719, loss_bbox: 0.0953, loss: 0.4394, grad_norm: 2.2686
2023-11-15 15:36:25,792 - mmtrack - INFO - Epoch [2][1200/1487]	lr: 1.000e-02, eta: 0:34:35, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0291, loss_rpn_bbox: 0.0057, loss_cls: 0.2715, acc: 91.3828, loss_bbox: 0.0919, loss: 0.3982, grad_norm: 2.1286
2023-11-15 15:36:39,218 - mmtrack - INFO - Epoch [2][1250/1487]	lr: 1.000e-02, eta: 0:34:21, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0289, loss_rpn_bbox: 0.0050, loss_cls: 0.2213, acc: 93.0078, loss_bbox: 0.0768, loss: 0.3322, grad_norm: 2.0077
2023-11-15 15:36:52,705 - mmtrack - INFO - Epoch [2][1300/1487]	lr: 1.000e-02, eta: 0:34:08, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0349, loss_rpn_bbox: 0.0058, loss_cls: 0.2429, acc: 92.0469, loss_bbox: 0.0890, loss: 0.3726, grad_norm: 2.3400
2023-11-15 15:37:06,171 - mmtrack - INFO - Epoch [2][1350/1487]	lr: 1.000e-02, eta: 0:33:55, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0384, loss_rpn_bbox: 0.0051, loss_cls: 0.2739, acc: 91.0234, loss_bbox: 0.0937, loss: 0.4111, grad_norm: 2.4895
2023-11-15 15:37:19,659 - mmtrack - INFO - Epoch [2][1400/1487]	lr: 1.000e-02, eta: 0:33:41, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0302, loss_rpn_bbox: 0.0058, loss_cls: 0.2353, acc: 91.9297, loss_bbox: 0.0884, loss: 0.3596, grad_norm: 2.1018
2023-11-15 15:37:33,089 - mmtrack - INFO - Epoch [2][1450/1487]	lr: 1.000e-02, eta: 0:33:28, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0296, loss_rpn_bbox: 0.0050, loss_cls: 0.2539, acc: 92.0234, loss_bbox: 0.0847, loss: 0.3731, grad_norm: 2.1812
2023-11-15 15:37:43,120 - mmtrack - INFO - Saving checkpoint at 2 epochs
2023-11-15 15:38:01,327 - mmtrack - INFO - Epoch [3][50/1487]	lr: 1.000e-03, eta: 0:32:46, time: 0.316, data_time: 0.052, memory: 4202, loss_rpn_cls: 0.0232, loss_rpn_bbox: 0.0036, loss_cls: 0.2058, acc: 92.9531, loss_bbox: 0.0886, loss: 0.3211, grad_norm: 1.9851
2023-11-15 15:38:14,816 - mmtrack - INFO - Epoch [3][100/1487]	lr: 1.000e-03, eta: 0:32:33, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0238, loss_rpn_bbox: 0.0043, loss_cls: 0.2059, acc: 92.2344, loss_bbox: 0.0867, loss: 0.3208, grad_norm: 2.0572
2023-11-15 15:38:28,365 - mmtrack - INFO - Epoch [3][150/1487]	lr: 1.000e-03, eta: 0:32:20, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0229, loss_rpn_bbox: 0.0038, loss_cls: 0.1861, acc: 93.6016, loss_bbox: 0.0746, loss: 0.2874, grad_norm: 2.0091
2023-11-15 15:38:41,933 - mmtrack - INFO - Epoch [3][200/1487]	lr: 1.000e-03, eta: 0:32:08, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0199, loss_rpn_bbox: 0.0035, loss_cls: 0.1773, acc: 93.6562, loss_bbox: 0.0700, loss: 0.2707, grad_norm: 2.0661
2023-11-15 15:38:55,479 - mmtrack - INFO - Epoch [3][250/1487]	lr: 1.000e-03, eta: 0:31:55, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0193, loss_rpn_bbox: 0.0033, loss_cls: 0.1796, acc: 93.7188, loss_bbox: 0.0650, loss: 0.2672, grad_norm: 2.0837
2023-11-15 15:39:09,089 - mmtrack - INFO - Epoch [3][300/1487]	lr: 1.000e-03, eta: 0:31:42, time: 0.272, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0238, loss_rpn_bbox: 0.0039, loss_cls: 0.1755, acc: 93.2891, loss_bbox: 0.0703, loss: 0.2735, grad_norm: 2.0351
2023-11-15 15:39:22,624 - mmtrack - INFO - Epoch [3][350/1487]	lr: 1.000e-03, eta: 0:31:29, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0195, loss_rpn_bbox: 0.0039, loss_cls: 0.1838, acc: 93.4219, loss_bbox: 0.0785, loss: 0.2858, grad_norm: 2.2219
2023-11-15 15:39:36,160 - mmtrack - INFO - Epoch [3][400/1487]	lr: 1.000e-03, eta: 0:31:16, time: 0.271, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0154, loss_rpn_bbox: 0.0036, loss_cls: 0.1784, acc: 93.3047, loss_bbox: 0.0736, loss: 0.2711, grad_norm: 2.1745
2023-11-15 15:39:49,654 - mmtrack - INFO - Epoch [3][450/1487]	lr: 1.000e-03, eta: 0:31:03, time: 0.270, data_time: 0.005, memory: 4202, loss_rpn_cls: 0.0210, loss_rpn_bbox: 0.0045, loss_cls: 0.1855, acc: 93.2656, loss_bbox: 0.0741, loss: 0.2851, grad_norm: 2.2328
2023-11-15 15:40:03,212 - mmtrack - INFO - Epoch [3][500/1487]	lr: 1.000e-03, eta: 0:30:50, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0172, loss_rpn_bbox: 0.0034, loss_cls: 0.1961, acc: 93.0469, loss_bbox: 0.0702, loss: 0.2869, grad_norm: 2.4250
2023-11-15 15:40:16,861 - mmtrack - INFO - Epoch [3][550/1487]	lr: 1.000e-03, eta: 0:30:38, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0205, loss_rpn_bbox: 0.0040, loss_cls: 0.1720, acc: 93.7422, loss_bbox: 0.0764, loss: 0.2728, grad_norm: 2.3769
2023-11-15 15:40:30,398 - mmtrack - INFO - Epoch [3][600/1487]	lr: 1.000e-03, eta: 0:30:25, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0226, loss_rpn_bbox: 0.0042, loss_cls: 0.1759, acc: 93.7500, loss_bbox: 0.0688, loss: 0.2715, grad_norm: 2.3454
2023-11-15 15:40:43,961 - mmtrack - INFO - Epoch [3][650/1487]	lr: 1.000e-03, eta: 0:30:12, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0184, loss_rpn_bbox: 0.0033, loss_cls: 0.1842, acc: 93.0234, loss_bbox: 0.0761, loss: 0.2820, grad_norm: 2.3608
2023-11-15 15:40:57,585 - mmtrack - INFO - Epoch [3][700/1487]	lr: 1.000e-03, eta: 0:29:59, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0191, loss_rpn_bbox: 0.0035, loss_cls: 0.1732, acc: 93.6406, loss_bbox: 0.0702, loss: 0.2660, grad_norm: 2.4935
2023-11-15 15:41:11,119 - mmtrack - INFO - Epoch [3][750/1487]	lr: 1.000e-03, eta: 0:29:46, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0206, loss_rpn_bbox: 0.0040, loss_cls: 0.1764, acc: 93.1328, loss_bbox: 0.0781, loss: 0.2792, grad_norm: 2.6190
2023-11-15 15:41:24,650 - mmtrack - INFO - Epoch [3][800/1487]	lr: 1.000e-03, eta: 0:29:33, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0222, loss_rpn_bbox: 0.0038, loss_cls: 0.1702, acc: 93.5312, loss_bbox: 0.0754, loss: 0.2717, grad_norm: 2.5524
2023-11-15 15:41:38,210 - mmtrack - INFO - Epoch [3][850/1487]	lr: 1.000e-03, eta: 0:29:20, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0269, loss_rpn_bbox: 0.0047, loss_cls: 0.1853, acc: 92.8672, loss_bbox: 0.0867, loss: 0.3035, grad_norm: 2.5827
2023-11-15 15:41:51,825 - mmtrack - INFO - Epoch [3][900/1487]	lr: 1.000e-03, eta: 0:29:07, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0191, loss_rpn_bbox: 0.0033, loss_cls: 0.1796, acc: 93.3359, loss_bbox: 0.0756, loss: 0.2776, grad_norm: 2.4210
2023-11-15 15:42:05,327 - mmtrack - INFO - Epoch [3][950/1487]	lr: 1.000e-03, eta: 0:28:54, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0029, loss_cls: 0.1281, acc: 95.3047, loss_bbox: 0.0601, loss: 0.2040, grad_norm: 2.3108
2023-11-15 15:42:18,890 - mmtrack - INFO - Epoch [3][1000/1487]	lr: 1.000e-03, eta: 0:28:40, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0169, loss_rpn_bbox: 0.0033, loss_cls: 0.1693, acc: 93.8359, loss_bbox: 0.0626, loss: 0.2521, grad_norm: 2.6989
2023-11-15 15:42:32,413 - mmtrack - INFO - Epoch [3][1050/1487]	lr: 1.000e-03, eta: 0:28:27, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0041, loss_cls: 0.1784, acc: 93.1094, loss_bbox: 0.0719, loss: 0.2701, grad_norm: 2.6220
2023-11-15 15:42:45,928 - mmtrack - INFO - Epoch [3][1100/1487]	lr: 1.000e-03, eta: 0:28:14, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0174, loss_rpn_bbox: 0.0034, loss_cls: 0.1599, acc: 94.2656, loss_bbox: 0.0604, loss: 0.2411, grad_norm: 2.5331
2023-11-15 15:42:59,485 - mmtrack - INFO - Epoch [3][1150/1487]	lr: 1.000e-03, eta: 0:28:01, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0180, loss_rpn_bbox: 0.0028, loss_cls: 0.1561, acc: 94.0312, loss_bbox: 0.0676, loss: 0.2445, grad_norm: 2.5585
2023-11-15 15:43:13,048 - mmtrack - INFO - Epoch [3][1200/1487]	lr: 1.000e-03, eta: 0:27:48, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0143, loss_rpn_bbox: 0.0036, loss_cls: 0.1621, acc: 93.8828, loss_bbox: 0.0711, loss: 0.2511, grad_norm: 2.3798
2023-11-15 15:43:26,580 - mmtrack - INFO - Epoch [3][1250/1487]	lr: 1.000e-03, eta: 0:27:35, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0026, loss_cls: 0.1625, acc: 94.0391, loss_bbox: 0.0690, loss: 0.2485, grad_norm: 2.6564
2023-11-15 15:43:40,060 - mmtrack - INFO - Epoch [3][1300/1487]	lr: 1.000e-03, eta: 0:27:22, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0155, loss_rpn_bbox: 0.0033, loss_cls: 0.1656, acc: 93.6719, loss_bbox: 0.0712, loss: 0.2556, grad_norm: 2.7314
2023-11-15 15:43:53,671 - mmtrack - INFO - Epoch [3][1350/1487]	lr: 1.000e-03, eta: 0:27:09, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0162, loss_rpn_bbox: 0.0046, loss_cls: 0.1284, acc: 95.0312, loss_bbox: 0.0603, loss: 0.2095, grad_norm: 2.3558
2023-11-15 15:44:07,161 - mmtrack - INFO - Epoch [3][1400/1487]	lr: 1.000e-03, eta: 0:26:55, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0147, loss_rpn_bbox: 0.0037, loss_cls: 0.1667, acc: 93.4297, loss_bbox: 0.0779, loss: 0.2629, grad_norm: 2.8396
2023-11-15 15:44:20,716 - mmtrack - INFO - Epoch [3][1450/1487]	lr: 1.000e-03, eta: 0:26:42, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0177, loss_rpn_bbox: 0.0036, loss_cls: 0.1525, acc: 93.8750, loss_bbox: 0.0701, loss: 0.2439, grad_norm: 2.7876
2023-11-15 15:44:30,760 - mmtrack - INFO - Saving checkpoint at 3 epochs
2023-11-15 15:44:49,316 - mmtrack - INFO - Epoch [4][50/1487]	lr: 1.000e-03, eta: 0:26:09, time: 0.319, data_time: 0.054, memory: 4202, loss_rpn_cls: 0.0146, loss_rpn_bbox: 0.0034, loss_cls: 0.1374, acc: 94.4922, loss_bbox: 0.0577, loss: 0.2131, grad_norm: 2.5008
2023-11-15 15:45:03,009 - mmtrack - INFO - Epoch [4][100/1487]	lr: 1.000e-03, eta: 0:25:56, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0214, loss_rpn_bbox: 0.0044, loss_cls: 0.1498, acc: 94.3516, loss_bbox: 0.0753, loss: 0.2508, grad_norm: 2.7555
2023-11-15 15:45:16,542 - mmtrack - INFO - Epoch [4][150/1487]	lr: 1.000e-03, eta: 0:25:43, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0158, loss_rpn_bbox: 0.0030, loss_cls: 0.1542, acc: 94.2109, loss_bbox: 0.0661, loss: 0.2390, grad_norm: 2.9135
2023-11-15 15:45:30,170 - mmtrack - INFO - Epoch [4][200/1487]	lr: 1.000e-03, eta: 0:25:30, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0122, loss_rpn_bbox: 0.0023, loss_cls: 0.1527, acc: 94.6016, loss_bbox: 0.0677, loss: 0.2349, grad_norm: 2.6403
2023-11-15 15:45:43,809 - mmtrack - INFO - Epoch [4][250/1487]	lr: 1.000e-03, eta: 0:25:18, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0035, loss_cls: 0.1533, acc: 94.3984, loss_bbox: 0.0737, loss: 0.2432, grad_norm: 2.6212
2023-11-15 15:45:57,389 - mmtrack - INFO - Epoch [4][300/1487]	lr: 1.000e-03, eta: 0:25:05, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0147, loss_rpn_bbox: 0.0039, loss_cls: 0.1545, acc: 93.7656, loss_bbox: 0.0702, loss: 0.2432, grad_norm: 2.9664
2023-11-15 15:46:10,961 - mmtrack - INFO - Epoch [4][350/1487]	lr: 1.000e-03, eta: 0:24:51, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0171, loss_rpn_bbox: 0.0037, loss_cls: 0.1635, acc: 93.6641, loss_bbox: 0.0708, loss: 0.2551, grad_norm: 3.0420
2023-11-15 15:46:24,584 - mmtrack - INFO - Epoch [4][400/1487]	lr: 1.000e-03, eta: 0:24:38, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0149, loss_rpn_bbox: 0.0038, loss_cls: 0.1720, acc: 93.3359, loss_bbox: 0.0737, loss: 0.2644, grad_norm: 3.2651
2023-11-15 15:46:38,155 - mmtrack - INFO - Epoch [4][450/1487]	lr: 1.000e-03, eta: 0:24:25, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0032, loss_cls: 0.1352, acc: 94.7500, loss_bbox: 0.0652, loss: 0.2140, grad_norm: 2.6948
2023-11-15 15:46:51,647 - mmtrack - INFO - Epoch [4][500/1487]	lr: 1.000e-03, eta: 0:24:12, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0034, loss_cls: 0.1328, acc: 94.8281, loss_bbox: 0.0660, loss: 0.2141, grad_norm: 2.7380
2023-11-15 15:47:05,190 - mmtrack - INFO - Epoch [4][550/1487]	lr: 1.000e-03, eta: 0:23:59, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0031, loss_cls: 0.1411, acc: 94.3750, loss_bbox: 0.0676, loss: 0.2234, grad_norm: 3.2014
2023-11-15 15:47:18,727 - mmtrack - INFO - Epoch [4][600/1487]	lr: 1.000e-03, eta: 0:23:46, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0038, loss_cls: 0.1283, acc: 95.0000, loss_bbox: 0.0601, loss: 0.2074, grad_norm: 2.8029
2023-11-15 15:47:32,317 - mmtrack - INFO - Epoch [4][650/1487]	lr: 1.000e-03, eta: 0:23:33, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0035, loss_cls: 0.1324, acc: 94.8203, loss_bbox: 0.0654, loss: 0.2165, grad_norm: 2.8758
2023-11-15 15:47:45,767 - mmtrack - INFO - Epoch [4][700/1487]	lr: 1.000e-03, eta: 0:23:20, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0155, loss_rpn_bbox: 0.0032, loss_cls: 0.1311, acc: 95.0312, loss_bbox: 0.0577, loss: 0.2075, grad_norm: 2.7672
2023-11-15 15:47:59,249 - mmtrack - INFO - Epoch [4][750/1487]	lr: 1.000e-03, eta: 0:23:07, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0134, loss_rpn_bbox: 0.0035, loss_cls: 0.1234, acc: 95.1328, loss_bbox: 0.0562, loss: 0.1965, grad_norm: 2.7038
2023-11-15 15:48:12,946 - mmtrack - INFO - Epoch [4][800/1487]	lr: 1.000e-03, eta: 0:22:54, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0041, loss_cls: 0.1252, acc: 95.3125, loss_bbox: 0.0615, loss: 0.2051, grad_norm: 2.8208
2023-11-15 15:48:26,536 - mmtrack - INFO - Epoch [4][850/1487]	lr: 1.000e-03, eta: 0:22:40, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0167, loss_rpn_bbox: 0.0035, loss_cls: 0.1285, acc: 94.9844, loss_bbox: 0.0581, loss: 0.2067, grad_norm: 2.9799
2023-11-15 15:48:40,157 - mmtrack - INFO - Epoch [4][900/1487]	lr: 1.000e-03, eta: 0:22:27, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0031, loss_cls: 0.1356, acc: 94.9375, loss_bbox: 0.0646, loss: 0.2166, grad_norm: 3.0316
2023-11-15 15:48:53,725 - mmtrack - INFO - Epoch [4][950/1487]	lr: 1.000e-03, eta: 0:22:14, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0028, loss_cls: 0.1386, acc: 94.9453, loss_bbox: 0.0606, loss: 0.2144, grad_norm: 2.9929
2023-11-15 15:49:07,347 - mmtrack - INFO - Epoch [4][1000/1487]	lr: 1.000e-03, eta: 0:22:01, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0159, loss_rpn_bbox: 0.0032, loss_cls: 0.1407, acc: 94.4297, loss_bbox: 0.0672, loss: 0.2270, grad_norm: 3.0383
2023-11-15 15:49:20,864 - mmtrack - INFO - Epoch [4][1050/1487]	lr: 1.000e-03, eta: 0:21:48, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0121, loss_rpn_bbox: 0.0028, loss_cls: 0.1507, acc: 94.2969, loss_bbox: 0.0587, loss: 0.2243, grad_norm: 3.1273
2023-11-15 15:49:34,440 - mmtrack - INFO - Epoch [4][1100/1487]	lr: 1.000e-03, eta: 0:21:35, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0025, loss_cls: 0.1043, acc: 96.0625, loss_bbox: 0.0442, loss: 0.1618, grad_norm: 2.3791
2023-11-15 15:49:48,025 - mmtrack - INFO - Epoch [4][1150/1487]	lr: 1.000e-03, eta: 0:21:22, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0114, loss_rpn_bbox: 0.0038, loss_cls: 0.1449, acc: 94.5781, loss_bbox: 0.0604, loss: 0.2205, grad_norm: 2.9065
2023-11-15 15:50:01,496 - mmtrack - INFO - Epoch [4][1200/1487]	lr: 1.000e-03, eta: 0:21:08, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0033, loss_cls: 0.1272, acc: 94.8750, loss_bbox: 0.0582, loss: 0.2020, grad_norm: 2.8846
2023-11-15 15:50:15,057 - mmtrack - INFO - Epoch [4][1250/1487]	lr: 1.000e-03, eta: 0:20:55, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0033, loss_cls: 0.1341, acc: 95.0312, loss_bbox: 0.0589, loss: 0.2094, grad_norm: 2.8726
2023-11-15 15:50:28,612 - mmtrack - INFO - Epoch [4][1300/1487]	lr: 1.000e-03, eta: 0:20:42, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0029, loss_cls: 0.1315, acc: 95.0312, loss_bbox: 0.0603, loss: 0.2039, grad_norm: 3.0149
2023-11-15 15:50:42,222 - mmtrack - INFO - Epoch [4][1350/1487]	lr: 1.000e-03, eta: 0:20:29, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0029, loss_cls: 0.1419, acc: 94.3281, loss_bbox: 0.0720, loss: 0.2287, grad_norm: 3.3014
2023-11-15 15:50:55,806 - mmtrack - INFO - Epoch [4][1400/1487]	lr: 1.000e-03, eta: 0:20:16, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0023, loss_cls: 0.1192, acc: 95.4688, loss_bbox: 0.0524, loss: 0.1840, grad_norm: 2.6940
2023-11-15 15:51:09,340 - mmtrack - INFO - Epoch [4][1450/1487]	lr: 1.000e-03, eta: 0:20:02, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0040, loss_cls: 0.1589, acc: 94.0469, loss_bbox: 0.0667, loss: 0.2453, grad_norm: 3.2359
2023-11-15 15:51:19,313 - mmtrack - INFO - Saving checkpoint at 4 epochs
2023-11-15 15:51:38,055 - mmtrack - INFO - Epoch [5][50/1487]	lr: 1.000e-03, eta: 0:19:34, time: 0.322, data_time: 0.054, memory: 4202, loss_rpn_cls: 0.0137, loss_rpn_bbox: 0.0037, loss_cls: 0.1284, acc: 94.9531, loss_bbox: 0.0524, loss: 0.1983, grad_norm: 2.9955
2023-11-15 15:51:51,824 - mmtrack - INFO - Epoch [5][100/1487]	lr: 1.000e-03, eta: 0:19:21, time: 0.275, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0023, loss_cls: 0.1211, acc: 95.2734, loss_bbox: 0.0568, loss: 0.1892, grad_norm: 3.1878
2023-11-15 15:52:05,340 - mmtrack - INFO - Epoch [5][150/1487]	lr: 1.000e-03, eta: 0:19:08, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0033, loss_cls: 0.1403, acc: 94.9219, loss_bbox: 0.0545, loss: 0.2132, grad_norm: 3.1410
2023-11-15 15:52:18,944 - mmtrack - INFO - Epoch [5][200/1487]	lr: 1.000e-03, eta: 0:18:54, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0028, loss_cls: 0.1182, acc: 95.2891, loss_bbox: 0.0617, loss: 0.1922, grad_norm: 2.9039
2023-11-15 15:52:32,513 - mmtrack - INFO - Epoch [5][250/1487]	lr: 1.000e-03, eta: 0:18:41, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0025, loss_cls: 0.1189, acc: 95.3359, loss_bbox: 0.0556, loss: 0.1870, grad_norm: 3.0162
2023-11-15 15:52:46,116 - mmtrack - INFO - Epoch [5][300/1487]	lr: 1.000e-03, eta: 0:18:28, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0037, loss_cls: 0.1317, acc: 94.9766, loss_bbox: 0.0595, loss: 0.2087, grad_norm: 3.1551
2023-11-15 15:52:59,669 - mmtrack - INFO - Epoch [5][350/1487]	lr: 1.000e-03, eta: 0:18:15, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0027, loss_cls: 0.1185, acc: 95.3516, loss_bbox: 0.0568, loss: 0.1875, grad_norm: 3.2152
2023-11-15 15:53:13,270 - mmtrack - INFO - Epoch [5][400/1487]	lr: 1.000e-03, eta: 0:18:02, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0025, loss_cls: 0.1165, acc: 95.4922, loss_bbox: 0.0554, loss: 0.1876, grad_norm: 2.9758
2023-11-15 15:53:26,932 - mmtrack - INFO - Epoch [5][450/1487]	lr: 1.000e-03, eta: 0:17:49, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0038, loss_cls: 0.1139, acc: 95.3594, loss_bbox: 0.0622, loss: 0.1923, grad_norm: 2.9243
2023-11-15 15:53:40,512 - mmtrack - INFO - Epoch [5][500/1487]	lr: 1.000e-03, eta: 0:17:36, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0030, loss_cls: 0.1229, acc: 95.4141, loss_bbox: 0.0571, loss: 0.1968, grad_norm: 3.1409
2023-11-15 15:53:54,097 - mmtrack - INFO - Epoch [5][550/1487]	lr: 1.000e-03, eta: 0:17:22, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0112, loss_rpn_bbox: 0.0023, loss_cls: 0.1214, acc: 95.2344, loss_bbox: 0.0576, loss: 0.1925, grad_norm: 3.0141
2023-11-15 15:54:07,718 - mmtrack - INFO - Epoch [5][600/1487]	lr: 1.000e-03, eta: 0:17:09, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0178, loss_rpn_bbox: 0.0034, loss_cls: 0.1342, acc: 94.8438, loss_bbox: 0.0602, loss: 0.2156, grad_norm: 3.4123
2023-11-15 15:54:21,324 - mmtrack - INFO - Epoch [5][650/1487]	lr: 1.000e-03, eta: 0:16:56, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0106, loss_rpn_bbox: 0.0031, loss_cls: 0.1117, acc: 95.6094, loss_bbox: 0.0516, loss: 0.1770, grad_norm: 2.8270
2023-11-15 15:54:34,899 - mmtrack - INFO - Epoch [5][700/1487]	lr: 1.000e-03, eta: 0:16:43, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0027, loss_cls: 0.1143, acc: 95.5078, loss_bbox: 0.0540, loss: 0.1808, grad_norm: 2.9202
2023-11-15 15:54:48,534 - mmtrack - INFO - Epoch [5][750/1487]	lr: 1.000e-03, eta: 0:16:30, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0024, loss_cls: 0.1027, acc: 95.7578, loss_bbox: 0.0502, loss: 0.1620, grad_norm: 2.8514
2023-11-15 15:55:02,181 - mmtrack - INFO - Epoch [5][800/1487]	lr: 1.000e-03, eta: 0:16:17, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0029, loss_cls: 0.0978, acc: 96.0312, loss_bbox: 0.0504, loss: 0.1611, grad_norm: 2.7478
2023-11-15 15:55:15,768 - mmtrack - INFO - Epoch [5][850/1487]	lr: 1.000e-03, eta: 0:16:03, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0039, loss_cls: 0.1244, acc: 95.1797, loss_bbox: 0.0593, loss: 0.2001, grad_norm: 3.2180
2023-11-15 15:55:29,328 - mmtrack - INFO - Epoch [5][900/1487]	lr: 1.000e-03, eta: 0:15:50, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0029, loss_cls: 0.1228, acc: 95.1016, loss_bbox: 0.0583, loss: 0.1947, grad_norm: 3.5690
2023-11-15 15:55:42,860 - mmtrack - INFO - Epoch [5][950/1487]	lr: 1.000e-03, eta: 0:15:37, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0106, loss_rpn_bbox: 0.0029, loss_cls: 0.1080, acc: 95.8984, loss_bbox: 0.0510, loss: 0.1726, grad_norm: 3.1591
2023-11-15 15:55:56,390 - mmtrack - INFO - Epoch [5][1000/1487]	lr: 1.000e-03, eta: 0:15:24, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0093, loss_rpn_bbox: 0.0032, loss_cls: 0.1186, acc: 95.3906, loss_bbox: 0.0506, loss: 0.1818, grad_norm: 3.2211
2023-11-15 15:56:09,892 - mmtrack - INFO - Epoch [5][1050/1487]	lr: 1.000e-03, eta: 0:15:10, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0043, loss_cls: 0.1136, acc: 95.7422, loss_bbox: 0.0552, loss: 0.1840, grad_norm: 3.1570
2023-11-15 15:56:23,494 - mmtrack - INFO - Epoch [5][1100/1487]	lr: 1.000e-03, eta: 0:14:57, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0037, loss_cls: 0.1131, acc: 95.1797, loss_bbox: 0.0581, loss: 0.1848, grad_norm: 2.9673
2023-11-15 15:56:37,071 - mmtrack - INFO - Epoch [5][1150/1487]	lr: 1.000e-03, eta: 0:14:44, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0029, loss_cls: 0.1174, acc: 95.1094, loss_bbox: 0.0601, loss: 0.1894, grad_norm: 3.3853
2023-11-15 15:56:50,636 - mmtrack - INFO - Epoch [5][1200/1487]	lr: 1.000e-03, eta: 0:14:31, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0030, loss_cls: 0.1371, acc: 94.7578, loss_bbox: 0.0602, loss: 0.2112, grad_norm: 3.3752
2023-11-15 15:57:04,203 - mmtrack - INFO - Epoch [5][1250/1487]	lr: 1.000e-03, eta: 0:14:17, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0022, loss_cls: 0.0992, acc: 95.9375, loss_bbox: 0.0473, loss: 0.1578, grad_norm: 2.9704
2023-11-15 15:57:17,823 - mmtrack - INFO - Epoch [5][1300/1487]	lr: 1.000e-03, eta: 0:14:04, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0031, loss_cls: 0.1163, acc: 95.4922, loss_bbox: 0.0561, loss: 0.1860, grad_norm: 3.2400
2023-11-15 15:57:31,293 - mmtrack - INFO - Epoch [5][1350/1487]	lr: 1.000e-03, eta: 0:13:51, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0093, loss_rpn_bbox: 0.0028, loss_cls: 0.1286, acc: 95.0625, loss_bbox: 0.0632, loss: 0.2039, grad_norm: 3.3181
2023-11-15 15:57:44,858 - mmtrack - INFO - Epoch [5][1400/1487]	lr: 1.000e-03, eta: 0:13:37, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0037, loss_cls: 0.1110, acc: 95.4688, loss_bbox: 0.0563, loss: 0.1792, grad_norm: 2.9108
2023-11-15 15:57:58,422 - mmtrack - INFO - Epoch [5][1450/1487]	lr: 1.000e-03, eta: 0:13:24, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0029, loss_cls: 0.1119, acc: 95.7031, loss_bbox: 0.0536, loss: 0.1783, grad_norm: 3.1005
2023-11-15 15:58:08,454 - mmtrack - INFO - Saving checkpoint at 5 epochs
2023-11-15 15:58:27,135 - mmtrack - INFO - Epoch [6][50/1487]	lr: 1.000e-04, eta: 0:12:58, time: 0.319, data_time: 0.056, memory: 4202, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0022, loss_cls: 0.0942, acc: 96.2500, loss_bbox: 0.0408, loss: 0.1458, grad_norm: 2.8982
2023-11-15 15:58:40,682 - mmtrack - INFO - Epoch [6][100/1487]	lr: 1.000e-04, eta: 0:12:45, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0029, loss_cls: 0.0888, acc: 96.2734, loss_bbox: 0.0400, loss: 0.1381, grad_norm: 2.5270
2023-11-15 15:58:54,274 - mmtrack - INFO - Epoch [6][150/1487]	lr: 1.000e-04, eta: 0:12:32, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0022, loss_cls: 0.0937, acc: 96.2031, loss_bbox: 0.0405, loss: 0.1437, grad_norm: 2.6014
2023-11-15 15:59:07,888 - mmtrack - INFO - Epoch [6][200/1487]	lr: 1.000e-04, eta: 0:12:18, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0122, loss_rpn_bbox: 0.0038, loss_cls: 0.0950, acc: 96.2422, loss_bbox: 0.0429, loss: 0.1538, grad_norm: 2.6487
2023-11-15 15:59:21,404 - mmtrack - INFO - Epoch [6][250/1487]	lr: 1.000e-04, eta: 0:12:05, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0023, loss_cls: 0.0911, acc: 96.1484, loss_bbox: 0.0401, loss: 0.1397, grad_norm: 2.5670
2023-11-15 15:59:35,025 - mmtrack - INFO - Epoch [6][300/1487]	lr: 1.000e-04, eta: 0:11:52, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0031, loss_cls: 0.1029, acc: 95.9453, loss_bbox: 0.0503, loss: 0.1645, grad_norm: 2.9861
2023-11-15 15:59:48,662 - mmtrack - INFO - Epoch [6][350/1487]	lr: 1.000e-04, eta: 0:11:39, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0026, loss_cls: 0.1009, acc: 95.9688, loss_bbox: 0.0470, loss: 0.1590, grad_norm: 2.8309
2023-11-15 16:00:02,216 - mmtrack - INFO - Epoch [6][400/1487]	lr: 1.000e-04, eta: 0:11:25, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0031, loss_cls: 0.1128, acc: 95.6016, loss_bbox: 0.0497, loss: 0.1758, grad_norm: 2.9800
2023-11-15 16:00:15,795 - mmtrack - INFO - Epoch [6][450/1487]	lr: 1.000e-04, eta: 0:11:12, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0025, loss_cls: 0.1171, acc: 95.2578, loss_bbox: 0.0478, loss: 0.1784, grad_norm: 3.5614
2023-11-15 16:00:29,317 - mmtrack - INFO - Epoch [6][500/1487]	lr: 1.000e-04, eta: 0:10:59, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0030, loss_cls: 0.1103, acc: 95.7266, loss_bbox: 0.0522, loss: 0.1758, grad_norm: 3.0101
2023-11-15 16:00:42,862 - mmtrack - INFO - Epoch [6][550/1487]	lr: 1.000e-04, eta: 0:10:46, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0030, loss_cls: 0.1034, acc: 95.8438, loss_bbox: 0.0471, loss: 0.1620, grad_norm: 2.9542
2023-11-15 16:00:56,464 - mmtrack - INFO - Epoch [6][600/1487]	lr: 1.000e-04, eta: 0:10:32, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0031, loss_cls: 0.1076, acc: 95.6250, loss_bbox: 0.0502, loss: 0.1703, grad_norm: 2.9409
2023-11-15 16:01:09,919 - mmtrack - INFO - Epoch [6][650/1487]	lr: 1.000e-04, eta: 0:10:19, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0023, loss_cls: 0.0918, acc: 96.1406, loss_bbox: 0.0367, loss: 0.1379, grad_norm: 2.5680
2023-11-15 16:01:23,427 - mmtrack - INFO - Epoch [6][700/1487]	lr: 1.000e-04, eta: 0:10:06, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0022, loss_cls: 0.0970, acc: 95.9922, loss_bbox: 0.0449, loss: 0.1507, grad_norm: 2.8264
2023-11-15 16:01:37,039 - mmtrack - INFO - Epoch [6][750/1487]	lr: 1.000e-04, eta: 0:09:53, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0029, loss_cls: 0.0985, acc: 96.0000, loss_bbox: 0.0454, loss: 0.1551, grad_norm: 2.8743
2023-11-15 16:01:50,581 - mmtrack - INFO - Epoch [6][800/1487]	lr: 1.000e-04, eta: 0:09:39, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0024, loss_cls: 0.0992, acc: 96.1562, loss_bbox: 0.0417, loss: 0.1506, grad_norm: 2.8474
2023-11-15 16:02:04,191 - mmtrack - INFO - Epoch [6][850/1487]	lr: 1.000e-04, eta: 0:09:26, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0025, loss_cls: 0.1083, acc: 95.5156, loss_bbox: 0.0523, loss: 0.1707, grad_norm: 2.9369
2023-11-15 16:02:17,750 - mmtrack - INFO - Epoch [6][900/1487]	lr: 1.000e-04, eta: 0:09:13, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0025, loss_cls: 0.1116, acc: 95.4453, loss_bbox: 0.0500, loss: 0.1717, grad_norm: 3.1833
2023-11-15 16:02:31,439 - mmtrack - INFO - Epoch [6][950/1487]	lr: 1.000e-04, eta: 0:09:00, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0032, loss_cls: 0.0999, acc: 96.2656, loss_bbox: 0.0395, loss: 0.1512, grad_norm: 3.0015
2023-11-15 16:02:44,983 - mmtrack - INFO - Epoch [6][1000/1487]	lr: 1.000e-04, eta: 0:08:46, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0027, loss_cls: 0.0987, acc: 95.9688, loss_bbox: 0.0437, loss: 0.1547, grad_norm: 2.8340
2023-11-15 16:02:58,473 - mmtrack - INFO - Epoch [6][1050/1487]	lr: 1.000e-04, eta: 0:08:33, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0028, loss_cls: 0.0892, acc: 96.4844, loss_bbox: 0.0357, loss: 0.1378, grad_norm: 2.7750
2023-11-15 16:03:12,067 - mmtrack - INFO - Epoch [6][1100/1487]	lr: 1.000e-04, eta: 0:08:20, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0028, loss_cls: 0.1034, acc: 96.0312, loss_bbox: 0.0470, loss: 0.1643, grad_norm: 2.9602
2023-11-15 16:03:25,647 - mmtrack - INFO - Epoch [6][1150/1487]	lr: 1.000e-04, eta: 0:08:06, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0021, loss_cls: 0.1003, acc: 96.1250, loss_bbox: 0.0438, loss: 0.1549, grad_norm: 3.0068
2023-11-15 16:03:39,087 - mmtrack - INFO - Epoch [6][1200/1487]	lr: 1.000e-04, eta: 0:07:53, time: 0.269, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0026, loss_cls: 0.0977, acc: 96.2891, loss_bbox: 0.0430, loss: 0.1499, grad_norm: 2.8033
2023-11-15 16:03:52,573 - mmtrack - INFO - Epoch [6][1250/1487]	lr: 1.000e-04, eta: 0:07:40, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0025, loss_cls: 0.0940, acc: 96.3672, loss_bbox: 0.0404, loss: 0.1460, grad_norm: 2.8642
2023-11-15 16:04:06,075 - mmtrack - INFO - Epoch [6][1300/1487]	lr: 1.000e-04, eta: 0:07:26, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0023, loss_cls: 0.1018, acc: 95.6641, loss_bbox: 0.0431, loss: 0.1532, grad_norm: 3.0292
2023-11-15 16:04:19,599 - mmtrack - INFO - Epoch [6][1350/1487]	lr: 1.000e-04, eta: 0:07:13, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0021, loss_cls: 0.1023, acc: 95.7812, loss_bbox: 0.0454, loss: 0.1572, grad_norm: 3.0425
2023-11-15 16:04:33,152 - mmtrack - INFO - Epoch [6][1400/1487]	lr: 1.000e-04, eta: 0:07:00, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0019, loss_cls: 0.0897, acc: 96.4297, loss_bbox: 0.0426, loss: 0.1402, grad_norm: 2.7060
2023-11-15 16:04:46,645 - mmtrack - INFO - Epoch [6][1450/1487]	lr: 1.000e-04, eta: 0:06:46, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0107, loss_rpn_bbox: 0.0030, loss_cls: 0.1107, acc: 95.8594, loss_bbox: 0.0449, loss: 0.1692, grad_norm: 3.1488
2023-11-15 16:04:56,753 - mmtrack - INFO - Saving checkpoint at 6 epochs
2023-11-15 16:05:15,404 - mmtrack - INFO - Epoch [7][50/1487]	lr: 1.000e-04, eta: 0:06:22, time: 0.321, data_time: 0.055, memory: 4202, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0032, loss_cls: 0.1122, acc: 95.4922, loss_bbox: 0.0470, loss: 0.1711, grad_norm: 3.0878
2023-11-15 16:05:29,084 - mmtrack - INFO - Epoch [7][100/1487]	lr: 1.000e-04, eta: 0:06:09, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0019, loss_cls: 0.0849, acc: 96.4141, loss_bbox: 0.0364, loss: 0.1298, grad_norm: 2.7807
2023-11-15 16:05:42,629 - mmtrack - INFO - Epoch [7][150/1487]	lr: 1.000e-04, eta: 0:05:56, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0020, loss_cls: 0.1015, acc: 95.8438, loss_bbox: 0.0427, loss: 0.1526, grad_norm: 2.9298
2023-11-15 16:05:56,276 - mmtrack - INFO - Epoch [7][200/1487]	lr: 1.000e-04, eta: 0:05:42, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0033, loss_cls: 0.0902, acc: 96.3438, loss_bbox: 0.0406, loss: 0.1402, grad_norm: 2.6616
2023-11-15 16:06:09,837 - mmtrack - INFO - Epoch [7][250/1487]	lr: 1.000e-04, eta: 0:05:29, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0030, loss_cls: 0.0901, acc: 96.3359, loss_bbox: 0.0430, loss: 0.1449, grad_norm: 2.8800
2023-11-15 16:06:23,363 - mmtrack - INFO - Epoch [7][300/1487]	lr: 1.000e-04, eta: 0:05:16, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0025, loss_cls: 0.0880, acc: 96.4766, loss_bbox: 0.0406, loss: 0.1385, grad_norm: 2.6676
2023-11-15 16:06:36,915 - mmtrack - INFO - Epoch [7][350/1487]	lr: 1.000e-04, eta: 0:05:02, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0028, loss_cls: 0.0858, acc: 96.4375, loss_bbox: 0.0420, loss: 0.1407, grad_norm: 2.9706
2023-11-15 16:06:50,639 - mmtrack - INFO - Epoch [7][400/1487]	lr: 1.000e-04, eta: 0:04:49, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0019, loss_cls: 0.0911, acc: 96.4062, loss_bbox: 0.0386, loss: 0.1378, grad_norm: 2.9363
2023-11-15 16:07:04,271 - mmtrack - INFO - Epoch [7][450/1487]	lr: 1.000e-04, eta: 0:04:36, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0027, loss_cls: 0.0992, acc: 95.8203, loss_bbox: 0.0435, loss: 0.1545, grad_norm: 3.0125
2023-11-15 16:07:17,838 - mmtrack - INFO - Epoch [7][500/1487]	lr: 1.000e-04, eta: 0:04:23, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0020, loss_cls: 0.0885, acc: 96.5000, loss_bbox: 0.0426, loss: 0.1386, grad_norm: 2.8008
2023-11-15 16:07:31,410 - mmtrack - INFO - Epoch [7][550/1487]	lr: 1.000e-04, eta: 0:04:09, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0026, loss_cls: 0.0957, acc: 96.1875, loss_bbox: 0.0440, loss: 0.1527, grad_norm: 3.0797
2023-11-15 16:07:44,960 - mmtrack - INFO - Epoch [7][600/1487]	lr: 1.000e-04, eta: 0:03:56, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0034, loss_cls: 0.0995, acc: 96.0234, loss_bbox: 0.0438, loss: 0.1545, grad_norm: 2.8499
2023-11-15 16:07:58,484 - mmtrack - INFO - Epoch [7][650/1487]	lr: 1.000e-04, eta: 0:03:43, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0026, loss_cls: 0.1058, acc: 95.8203, loss_bbox: 0.0434, loss: 0.1613, grad_norm: 3.3252
2023-11-15 16:08:12,144 - mmtrack - INFO - Epoch [7][700/1487]	lr: 1.000e-04, eta: 0:03:29, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0024, loss_cls: 0.0898, acc: 96.2891, loss_bbox: 0.0409, loss: 0.1409, grad_norm: 2.8005
2023-11-15 16:08:25,699 - mmtrack - INFO - Epoch [7][750/1487]	lr: 1.000e-04, eta: 0:03:16, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0079, loss_rpn_bbox: 0.0023, loss_cls: 0.0919, acc: 96.2891, loss_bbox: 0.0450, loss: 0.1471, grad_norm: 3.0557
2023-11-15 16:08:39,415 - mmtrack - INFO - Epoch [7][800/1487]	lr: 1.000e-04, eta: 0:03:03, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0027, loss_cls: 0.0954, acc: 96.2031, loss_bbox: 0.0425, loss: 0.1480, grad_norm: 2.9648
2023-11-15 16:08:52,955 - mmtrack - INFO - Epoch [7][850/1487]	lr: 1.000e-04, eta: 0:02:49, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0023, loss_cls: 0.0846, acc: 96.4922, loss_bbox: 0.0396, loss: 0.1338, grad_norm: 2.9421
2023-11-15 16:09:06,539 - mmtrack - INFO - Epoch [7][900/1487]	lr: 1.000e-04, eta: 0:02:36, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0028, loss_cls: 0.0941, acc: 96.0078, loss_bbox: 0.0393, loss: 0.1445, grad_norm: 2.8000
2023-11-15 16:09:20,105 - mmtrack - INFO - Epoch [7][950/1487]	lr: 1.000e-04, eta: 0:02:23, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0030, loss_cls: 0.0849, acc: 96.4766, loss_bbox: 0.0370, loss: 0.1334, grad_norm: 3.1192
2023-11-15 16:09:33,603 - mmtrack - INFO - Epoch [7][1000/1487]	lr: 1.000e-04, eta: 0:02:09, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0027, loss_cls: 0.0930, acc: 96.3438, loss_bbox: 0.0430, loss: 0.1457, grad_norm: 3.0203
2023-11-15 16:09:47,221 - mmtrack - INFO - Epoch [7][1050/1487]	lr: 1.000e-04, eta: 0:01:56, time: 0.272, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0025, loss_cls: 0.1004, acc: 96.0938, loss_bbox: 0.0382, loss: 0.1481, grad_norm: 3.0623
2023-11-15 16:10:00,893 - mmtrack - INFO - Epoch [7][1100/1487]	lr: 1.000e-04, eta: 0:01:43, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0027, loss_cls: 0.0866, acc: 96.4219, loss_bbox: 0.0415, loss: 0.1396, grad_norm: 3.0183
2023-11-15 16:10:14,626 - mmtrack - INFO - Epoch [7][1150/1487]	lr: 1.000e-04, eta: 0:01:29, time: 0.275, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0024, loss_cls: 0.1001, acc: 95.8828, loss_bbox: 0.0445, loss: 0.1545, grad_norm: 3.1920
2023-11-15 16:10:28,200 - mmtrack - INFO - Epoch [7][1200/1487]	lr: 1.000e-04, eta: 0:01:16, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0032, loss_cls: 0.1069, acc: 95.9688, loss_bbox: 0.0453, loss: 0.1657, grad_norm: 3.4393
2023-11-15 16:10:41,898 - mmtrack - INFO - Epoch [7][1250/1487]	lr: 1.000e-04, eta: 0:01:03, time: 0.274, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0079, loss_rpn_bbox: 0.0022, loss_cls: 0.0942, acc: 96.1562, loss_bbox: 0.0423, loss: 0.1466, grad_norm: 3.1989
2023-11-15 16:10:55,453 - mmtrack - INFO - Epoch [7][1300/1487]	lr: 1.000e-04, eta: 0:00:49, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0021, loss_cls: 0.0853, acc: 96.6562, loss_bbox: 0.0417, loss: 0.1375, grad_norm: 2.7914
2023-11-15 16:11:09,084 - mmtrack - INFO - Epoch [7][1350/1487]	lr: 1.000e-04, eta: 0:00:36, time: 0.273, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0068, loss_rpn_bbox: 0.0023, loss_cls: 0.0874, acc: 96.3672, loss_bbox: 0.0450, loss: 0.1416, grad_norm: 2.9131
2023-11-15 16:11:22,635 - mmtrack - INFO - Epoch [7][1400/1487]	lr: 1.000e-04, eta: 0:00:23, time: 0.271, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0021, loss_cls: 0.0940, acc: 96.0312, loss_bbox: 0.0436, loss: 0.1468, grad_norm: 2.9598
2023-11-15 16:11:36,147 - mmtrack - INFO - Epoch [7][1450/1487]	lr: 1.000e-04, eta: 0:00:09, time: 0.270, data_time: 0.006, memory: 4202, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0025, loss_cls: 0.0902, acc: 96.2422, loss_bbox: 0.0404, loss: 0.1421, grad_norm: 3.0253
2023-11-15 16:11:46,160 - mmtrack - INFO - Saving checkpoint at 7 epochs
[                                                  ] 0/312, elapsed: 0s, ETA:[                                 ] 1/312, 0.3 task/s, elapsed: 4s, ETA:  1204s[                                 ] 2/312, 0.5 task/s, elapsed: 4s, ETA:   650s[                                 ] 3/312, 0.7 task/s, elapsed: 5s, ETA:   464s[                                 ] 4/312, 0.8 task/s, elapsed: 5s, ETA:   370s[                                 ] 5/312, 1.0 task/s, elapsed: 5s, ETA:   314s[                                 ] 6/312, 1.1 task/s, elapsed: 5s, ETA:   276s[                                 ] 7/312, 1.2 task/s, elapsed: 6s, ETA:   250s[                                 ] 8/312, 1.3 task/s, elapsed: 6s, ETA:   229s[                                 ] 9/312, 1.4 task/s, elapsed: 6s, ETA:   214s[>                               ] 10/312, 1.5 task/s, elapsed: 7s, ETA:   201s[>                               ] 11/312, 1.6 task/s, elapsed: 7s, ETA:   190s[>                               ] 12/312, 1.7 task/s, elapsed: 7s, ETA:   182s[>                               ] 13/312, 1.7 task/s, elapsed: 8s, ETA:   174s[>                               ] 14/312, 1.8 task/s, elapsed: 8s, ETA:   168s[>                               ] 15/312, 1.8 task/s, elapsed: 8s, ETA:   162s[>                               ] 16/312, 1.9 task/s, elapsed: 8s, ETA:   157s[>                               ] 17/312, 1.9 task/s, elapsed: 9s, ETA:   153s[>                               ] 18/312, 2.0 task/s, elapsed: 9s, ETA:   149s[>                               ] 19/312, 2.0 task/s, elapsed: 9s, ETA:   145s[>                              ] 20/312, 2.1 task/s, elapsed: 10s, ETA:   142s[>>                             ] 21/312, 2.1 task/s, elapsed: 10s, ETA:   139s[>>                             ] 22/312, 2.1 task/s, elapsed: 10s, ETA:   136s[>>                             ] 23/312, 2.2 task/s, elapsed: 11s, ETA:   134s[>>                             ] 24/312, 2.2 task/s, elapsed: 11s, ETA:   132s[>>                             ] 25/312, 2.2 task/s, elapsed: 11s, ETA:   129s[>>                             ] 26/312, 2.2 task/s, elapsed: 12s, ETA:   127s[>>                             ] 27/312, 2.3 task/s, elapsed: 12s, ETA:   125s[>>                             ] 28/312, 2.3 task/s, elapsed: 12s, ETA:   124s[>>                             ] 29/312, 2.3 task/s, elapsed: 12s, ETA:   122s[>>                             ] 30/312, 2.3 task/s, elapsed: 13s, ETA:   120s[>>>                            ] 31/312, 2.4 task/s, elapsed: 13s, ETA:   119s[>>>                            ] 32/312, 2.4 task/s, elapsed: 13s, ETA:   117s[>>>                            ] 33/312, 2.4 task/s, elapsed: 14s, ETA:   116s[>>>                            ] 34/312, 2.4 task/s, elapsed: 14s, ETA:   115s[>>>                            ] 35/312, 2.4 task/s, elapsed: 14s, ETA:   113s[>>>                            ] 36/312, 2.5 task/s, elapsed: 15s, ETA:   112s[>>>                            ] 37/312, 2.5 task/s, elapsed: 15s, ETA:   111s[>>>                            ] 38/312, 2.5 task/s, elapsed: 15s, ETA:   110s[>>>                            ] 39/312, 2.5 task/s, elapsed: 16s, ETA:   109s[>>>                            ] 40/312, 2.5 task/s, elapsed: 16s, ETA:   108s[>>>>                           ] 41/312, 2.5 task/s, elapsed: 16s, ETA:   107s[>>>>                           ] 42/312, 2.5 task/s, elapsed: 16s, ETA:   106s[>>>>                           ] 43/312, 2.6 task/s, elapsed: 17s, ETA:   105s[>>>>                           ] 44/312, 2.6 task/s, elapsed: 17s, ETA:   104s[>>>>                           ] 45/312, 2.6 task/s, elapsed: 17s, ETA:   103s[>>>>                           ] 46/312, 2.6 task/s, elapsed: 18s, ETA:   102s[>>>>                           ] 47/312, 2.6 task/s, elapsed: 18s, ETA:   102s[>>>>                           ] 48/312, 2.6 task/s, elapsed: 18s, ETA:   101s[>>>>                           ] 49/312, 2.6 task/s, elapsed: 19s, ETA:   100s[>>>>                           ] 50/312, 2.6 task/s, elapsed: 19s, ETA:    99s[>>>>>                          ] 51/312, 2.7 task/s, elapsed: 19s, ETA:    98s[>>>>>                          ] 52/312, 2.7 task/s, elapsed: 20s, ETA:    98s[>>>>>                          ] 53/312, 2.7 task/s, elapsed: 20s, ETA:    97s[>>>>>                          ] 54/312, 2.7 task/s, elapsed: 20s, ETA:    96s[>>>>>                          ] 55/312, 2.7 task/s, elapsed: 20s, ETA:    96s[>>>>>                          ] 56/312, 2.7 task/s, elapsed: 21s, ETA:    95s[>>>>>                          ] 57/312, 2.7 task/s, elapsed: 21s, ETA:    94s[>>>>>                          ] 58/312, 2.7 task/s, elapsed: 21s, ETA:    94s[>>>>>                          ] 59/312, 2.7 task/s, elapsed: 22s, ETA:    93s[>>>>>                          ] 60/312, 2.7 task/s, elapsed: 22s, ETA:    92s[>>>>>>                         ] 61/312, 2.7 task/s, elapsed: 22s, ETA:    92s[>>>>>>                         ] 62/312, 2.7 task/s, elapsed: 23s, ETA:    91s[>>>>>>                         ] 63/312, 2.7 task/s, elapsed: 23s, ETA:    91s[>>>>>>                         ] 64/312, 2.8 task/s, elapsed: 23s, ETA:    90s[>>>>>>                         ] 65/312, 2.8 task/s, elapsed: 24s, ETA:    89s[>>>>>>                         ] 66/312, 2.8 task/s, elapsed: 24s, ETA:    89s[>>>>>>                         ] 67/312, 2.8 task/s, elapsed: 24s, ETA:    88s[>>>>>>                         ] 68/312, 2.8 task/s, elapsed: 24s, ETA:    88s[>>>>>>                         ] 69/312, 2.8 task/s, elapsed: 25s, ETA:    87s[>>>>>>                         ] 70/312, 2.8 task/s, elapsed: 25s, ETA:    87s[>>>>>>>                        ] 71/312, 2.8 task/s, elapsed: 25s, ETA:    86s[>>>>>>>                        ] 72/312, 2.8 task/s, elapsed: 26s, ETA:    86s[>>>>>>>                        ] 73/312, 2.8 task/s, elapsed: 26s, ETA:    85s[>>>>>>>                        ] 74/312, 2.8 task/s, elapsed: 26s, ETA:    85s[>>>>>>>                        ] 75/312, 2.8 task/s, elapsed: 27s, ETA:    84s[>>>>>>>                        ] 76/312, 2.8 task/s, elapsed: 27s, ETA:    83s[>>>>>>>                        ] 77/312, 2.8 task/s, elapsed: 27s, ETA:    83s[>>>>>>>                        ] 78/312, 2.8 task/s, elapsed: 28s, ETA:    83s[>>>>>>>                        ] 79/312, 2.8 task/s, elapsed: 28s, ETA:    82s[>>>>>>>                        ] 80/312, 2.8 task/s, elapsed: 28s, ETA:    82s[>>>>>>>>                       ] 81/312, 2.8 task/s, elapsed: 28s, ETA:    81s[>>>>>>>>                       ] 82/312, 2.9 task/s, elapsed: 29s, ETA:    81s[>>>>>>>>                       ] 83/312, 2.9 task/s, elapsed: 29s, ETA:    80s[>>>>>>>>                       ] 84/312, 2.9 task/s, elapsed: 29s, ETA:    80s[>>>>>>>>                       ] 85/312, 2.9 task/s, elapsed: 30s, ETA:    79s[>>>>>>>>                       ] 86/312, 2.9 task/s, elapsed: 30s, ETA:    79s[>>>>>>>>                       ] 87/312, 2.9 task/s, elapsed: 30s, ETA:    78s[>>>>>>>>                       ] 88/312, 2.9 task/s, elapsed: 31s, ETA:    78s[>>>>>>>>                       ] 89/312, 2.9 task/s, elapsed: 31s, ETA:    77s[>>>>>>>>                       ] 90/312, 2.9 task/s, elapsed: 31s, ETA:    77s[>>>>>>>>>                      ] 91/312, 2.9 task/s, elapsed: 31s, ETA:    76s[>>>>>>>>>                      ] 92/312, 2.9 task/s, elapsed: 32s, ETA:    76s[>>>>>>>>>                      ] 93/312, 2.9 task/s, elapsed: 32s, ETA:    76s[>>>>>>>>>                      ] 94/312, 2.9 task/s, elapsed: 32s, ETA:    75s[>>>>>>>>>                      ] 95/312, 2.9 task/s, elapsed: 33s, ETA:    75s[>>>>>>>>>                      ] 96/312, 2.9 task/s, elapsed: 33s, ETA:    74s[>>>>>>>>>                      ] 97/312, 2.9 task/s, elapsed: 33s, ETA:    74s[>>>>>>>>>                      ] 98/312, 2.9 task/s, elapsed: 34s, ETA:    73s[>>>>>>>>>                      ] 99/312, 2.9 task/s, elapsed: 34s, ETA:    73s[>>>>>>>>>                     ] 100/312, 2.9 task/s, elapsed: 34s, ETA:    73s[>>>>>>>>>                     ] 101/312, 2.9 task/s, elapsed: 35s, ETA:    72s[>>>>>>>>>                     ] 102/312, 2.9 task/s, elapsed: 35s, ETA:    72s[>>>>>>>>>                     ] 103/312, 2.9 task/s, elapsed: 35s, ETA:    71s[>>>>>>>>>>                    ] 104/312, 2.9 task/s, elapsed: 35s, ETA:    71s[>>>>>>>>>>                    ] 105/312, 2.9 task/s, elapsed: 36s, ETA:    71s[>>>>>>>>>>                    ] 106/312, 2.9 task/s, elapsed: 36s, ETA:    70s[>>>>>>>>>>                    ] 107/312, 2.9 task/s, elapsed: 36s, ETA:    70s[>>>>>>>>>>                    ] 108/312, 2.9 task/s, elapsed: 37s, ETA:    69s[>>>>>>>>>>                    ] 109/312, 2.9 task/s, elapsed: 37s, ETA:    69s[>>>>>>>>>>                    ] 110/312, 2.9 task/s, elapsed: 37s, ETA:    69s[>>>>>>>>>>                    ] 111/312, 3.0 task/s, elapsed: 38s, ETA:    68s[>>>>>>>>>>                    ] 112/312, 3.0 task/s, elapsed: 38s, ETA:    68s[>>>>>>>>>>                    ] 113/312, 3.0 task/s, elapsed: 38s, ETA:    67s[>>>>>>>>>>                    ] 114/312, 3.0 task/s, elapsed: 39s, ETA:    67s[>>>>>>>>>>>                   ] 115/312, 3.0 task/s, elapsed: 39s, ETA:    67s[>>>>>>>>>>>                   ] 116/312, 3.0 task/s, elapsed: 39s, ETA:    66s[>>>>>>>>>>>                   ] 117/312, 3.0 task/s, elapsed: 39s, ETA:    66s[>>>>>>>>>>>                   ] 118/312, 3.0 task/s, elapsed: 40s, ETA:    65s[>>>>>>>>>>>                   ] 119/312, 3.0 task/s, elapsed: 40s, ETA:    65s[>>>>>>>>>>>                   ] 120/312, 3.0 task/s, elapsed: 40s, ETA:    65s[>>>>>>>>>>>                   ] 121/312, 3.0 task/s, elapsed: 41s, ETA:    64s[>>>>>>>>>>>                   ] 122/312, 3.0 task/s, elapsed: 41s, ETA:    64s[>>>>>>>>>>>                   ] 123/312, 3.0 task/s, elapsed: 41s, ETA:    63s[>>>>>>>>>>>                   ] 124/312, 3.0 task/s, elapsed: 42s, ETA:    63s[>>>>>>>>>>>>                  ] 125/312, 3.0 task/s, elapsed: 42s, ETA:    63s[>>>>>>>>>>>>                  ] 126/312, 3.0 task/s, elapsed: 42s, ETA:    62s[>>>>>>>>>>>>                  ] 127/312, 3.0 task/s, elapsed: 43s, ETA:    62s[>>>>>>>>>>>>                  ] 128/312, 3.0 task/s, elapsed: 43s, ETA:    62s[>>>>>>>>>>>>                  ] 129/312, 3.0 task/s, elapsed: 43s, ETA:    61s[>>>>>>>>>>>>                  ] 130/312, 3.0 task/s, elapsed: 43s, ETA:    61s[>>>>>>>>>>>>                  ] 131/312, 3.0 task/s, elapsed: 44s, ETA:    60s[>>>>>>>>>>>>                  ] 132/312, 3.0 task/s, elapsed: 44s, ETA:    60s[>>>>>>>>>>>>                  ] 133/312, 3.0 task/s, elapsed: 44s, ETA:    60s[>>>>>>>>>>>>                  ] 134/312, 3.0 task/s, elapsed: 45s, ETA:    59s[>>>>>>>>>>>>                  ] 135/312, 3.0 task/s, elapsed: 45s, ETA:    59s[>>>>>>>>>>>>>                 ] 136/312, 3.0 task/s, elapsed: 45s, ETA:    59s[>>>>>>>>>>>>>                 ] 137/312, 3.0 task/s, elapsed: 46s, ETA:    58s[>>>>>>>>>>>>>                 ] 138/312, 3.0 task/s, elapsed: 46s, ETA:    58s[>>>>>>>>>>>>>                 ] 139/312, 3.0 task/s, elapsed: 46s, ETA:    58s[>>>>>>>>>>>>>                 ] 140/312, 3.0 task/s, elapsed: 47s, ETA:    57s[>>>>>>>>>>>>>                 ] 141/312, 3.0 task/s, elapsed: 47s, ETA:    57s[>>>>>>>>>>>>>                 ] 142/312, 3.0 task/s, elapsed: 47s, ETA:    56s[>>>>>>>>>>>>>                 ] 143/312, 3.0 task/s, elapsed: 47s, ETA:    56s[>>>>>>>>>>>>>                 ] 144/312, 3.0 task/s, elapsed: 48s, ETA:    56s[>>>>>>>>>>>>>                 ] 145/312, 3.0 task/s, elapsed: 48s, ETA:    55s[>>>>>>>>>>>>>>                ] 146/312, 3.0 task/s, elapsed: 48s, ETA:    55s[>>>>>>>>>>>>>>                ] 147/312, 3.0 task/s, elapsed: 49s, ETA:    55s[>>>>>>>>>>>>>>                ] 148/312, 3.0 task/s, elapsed: 49s, ETA:    54s[>>>>>>>>>>>>>>                ] 149/312, 3.0 task/s, elapsed: 49s, ETA:    54s[>>>>>>>>>>>>>>                ] 150/312, 3.0 task/s, elapsed: 50s, ETA:    54s[>>>>>>>>>>>>>>                ] 151/312, 3.0 task/s, elapsed: 50s, ETA:    53s[>>>>>>>>>>>>>>                ] 152/312, 3.0 task/s, elapsed: 50s, ETA:    53s[>>>>>>>>>>>>>>                ] 153/312, 3.0 task/s, elapsed: 51s, ETA:    52s[>>>>>>>>>>>>>>                ] 154/312, 3.0 task/s, elapsed: 51s, ETA:    52s[>>>>>>>>>>>>>>                ] 155/312, 3.0 task/s, elapsed: 51s, ETA:    52s[>>>>>>>>>>>>>>>               ] 156/312, 3.0 task/s, elapsed: 51s, ETA:    51s[>>>>>>>>>>>>>>>               ] 157/312, 3.0 task/s, elapsed: 52s, ETA:    51s[>>>>>>>>>>>>>>>               ] 158/312, 3.0 task/s, elapsed: 52s, ETA:    51s[>>>>>>>>>>>>>>>               ] 159/312, 3.0 task/s, elapsed: 52s, ETA:    50s[>>>>>>>>>>>>>>>               ] 160/312, 3.0 task/s, elapsed: 53s, ETA:    50s[>>>>>>>>>>>>>>>               ] 161/312, 3.0 task/s, elapsed: 53s, ETA:    50s[>>>>>>>>>>>>>>>               ] 162/312, 3.0 task/s, elapsed: 53s, ETA:    49s[>>>>>>>>>>>>>>>               ] 163/312, 3.0 task/s, elapsed: 54s, ETA:    49s[>>>>>>>>>>>>>>>               ] 164/312, 3.0 task/s, elapsed: 54s, ETA:    49s[>>>>>>>>>>>>>>>               ] 165/312, 3.0 task/s, elapsed: 54s, ETA:    48s[>>>>>>>>>>>>>>>               ] 166/312, 3.0 task/s, elapsed: 55s, ETA:    48s[>>>>>>>>>>>>>>>>              ] 167/312, 3.0 task/s, elapsed: 55s, ETA:    48s[>>>>>>>>>>>>>>>>              ] 168/312, 3.0 task/s, elapsed: 55s, ETA:    47s[>>>>>>>>>>>>>>>>              ] 169/312, 3.0 task/s, elapsed: 55s, ETA:    47s[>>>>>>>>>>>>>>>>              ] 170/312, 3.1 task/s, elapsed: 56s, ETA:    47s[>>>>>>>>>>>>>>>>              ] 171/312, 3.1 task/s, elapsed: 56s, ETA:    46s[>>>>>>>>>>>>>>>>              ] 172/312, 3.1 task/s, elapsed: 56s, ETA:    46s[>>>>>>>>>>>>>>>>              ] 173/312, 3.1 task/s, elapsed: 57s, ETA:    46s[>>>>>>>>>>>>>>>>              ] 174/312, 3.1 task/s, elapsed: 57s, ETA:    45s[>>>>>>>>>>>>>>>>              ] 175/312, 3.1 task/s, elapsed: 57s, ETA:    45s[>>>>>>>>>>>>>>>>              ] 176/312, 3.1 task/s, elapsed: 58s, ETA:    44s[>>>>>>>>>>>>>>>>>             ] 177/312, 3.1 task/s, elapsed: 58s, ETA:    44s[>>>>>>>>>>>>>>>>>             ] 178/312, 3.1 task/s, elapsed: 58s, ETA:    44s[>>>>>>>>>>>>>>>>>             ] 179/312, 3.1 task/s, elapsed: 58s, ETA:    43s[>>>>>>>>>>>>>>>>>             ] 180/312, 3.1 task/s, elapsed: 59s, ETA:    43s[>>>>>>>>>>>>>>>>>             ] 181/312, 3.1 task/s, elapsed: 59s, ETA:    43s[>>>>>>>>>>>>>>>>>             ] 182/312, 3.1 task/s, elapsed: 59s, ETA:    42s[>>>>>>>>>>>>>>>>>             ] 183/312, 3.1 task/s, elapsed: 60s, ETA:    42s[>>>>>>>>>>>>>>>>>             ] 184/312, 3.1 task/s, elapsed: 60s, ETA:    42s[>>>>>>>>>>>>>>>>>             ] 185/312, 3.1 task/s, elapsed: 60s, ETA:    41s[>>>>>>>>>>>>>>>>>             ] 186/312, 3.1 task/s, elapsed: 61s, ETA:    41s[>>>>>>>>>>>>>>>>>             ] 187/312, 3.1 task/s, elapsed: 61s, ETA:    41s[>>>>>>>>>>>>>>>>>>            ] 188/312, 3.1 task/s, elapsed: 61s, ETA:    40s[>>>>>>>>>>>>>>>>>>            ] 189/312, 3.1 task/s, elapsed: 62s, ETA:    40s[>>>>>>>>>>>>>>>>>>            ] 190/312, 3.1 task/s, elapsed: 62s, ETA:    40s[>>>>>>>>>>>>>>>>>>            ] 191/312, 3.1 task/s, elapsed: 62s, ETA:    39s[>>>>>>>>>>>>>>>>>>            ] 192/312, 3.1 task/s, elapsed: 62s, ETA:    39s[>>>>>>>>>>>>>>>>>>            ] 193/312, 3.1 task/s, elapsed: 63s, ETA:    39s[>>>>>>>>>>>>>>>>>>            ] 194/312, 3.1 task/s, elapsed: 63s, ETA:    38s[>>>>>>>>>>>>>>>>>>            ] 195/312, 3.1 task/s, elapsed: 63s, ETA:    38s[>>>>>>>>>>>>>>>>>>            ] 196/312, 3.1 task/s, elapsed: 64s, ETA:    38s[>>>>>>>>>>>>>>>>>>            ] 197/312, 3.1 task/s, elapsed: 64s, ETA:    37s[>>>>>>>>>>>>>>>>>>>           ] 198/312, 3.1 task/s, elapsed: 64s, ETA:    37s[>>>>>>>>>>>>>>>>>>>           ] 199/312, 3.1 task/s, elapsed: 65s, ETA:    37s[>>>>>>>>>>>>>>>>>>>           ] 200/312, 3.1 task/s, elapsed: 65s, ETA:    36s[>>>>>>>>>>>>>>>>>>>           ] 201/312, 3.1 task/s, elapsed: 65s, ETA:    36s[>>>>>>>>>>>>>>>>>>>           ] 202/312, 3.1 task/s, elapsed: 66s, ETA:    36s[>>>>>>>>>>>>>>>>>>>           ] 203/312, 3.1 task/s, elapsed: 66s, ETA:    35s[>>>>>>>>>>>>>>>>>>>           ] 204/312, 3.1 task/s, elapsed: 66s, ETA:    35s[>>>>>>>>>>>>>>>>>>>           ] 205/312, 3.1 task/s, elapsed: 66s, ETA:    35s[>>>>>>>>>>>>>>>>>>>           ] 206/312, 3.1 task/s, elapsed: 67s, ETA:    34s[>>>>>>>>>>>>>>>>>>>           ] 207/312, 3.1 task/s, elapsed: 67s, ETA:    34s[>>>>>>>>>>>>>>>>>>>>          ] 208/312, 3.1 task/s, elapsed: 67s, ETA:    34s[>>>>>>>>>>>>>>>>>>>>          ] 209/312, 3.1 task/s, elapsed: 68s, ETA:    33s[>>>>>>>>>>>>>>>>>>>>          ] 210/312, 3.1 task/s, elapsed: 68s, ETA:    33s[>>>>>>>>>>>>>>>>>>>>          ] 211/312, 3.1 task/s, elapsed: 68s, ETA:    33s[>>>>>>>>>>>>>>>>>>>>          ] 212/312, 3.1 task/s, elapsed: 69s, ETA:    32s[>>>>>>>>>>>>>>>>>>>>          ] 213/312, 3.1 task/s, elapsed: 69s, ETA:    32s[>>>>>>>>>>>>>>>>>>>>          ] 214/312, 3.1 task/s, elapsed: 69s, ETA:    32s[>>>>>>>>>>>>>>>>>>>>          ] 215/312, 3.1 task/s, elapsed: 70s, ETA:    31s[>>>>>>>>>>>>>>>>>>>>          ] 216/312, 3.1 task/s, elapsed: 70s, ETA:    31s[>>>>>>>>>>>>>>>>>>>>          ] 217/312, 3.1 task/s, elapsed: 70s, ETA:    31s[>>>>>>>>>>>>>>>>>>>>          ] 218/312, 3.1 task/s, elapsed: 70s, ETA:    30s[>>>>>>>>>>>>>>>>>>>>>         ] 219/312, 3.1 task/s, elapsed: 71s, ETA:    30s[>>>>>>>>>>>>>>>>>>>>>         ] 220/312, 3.1 task/s, elapsed: 71s, ETA:    30s[>>>>>>>>>>>>>>>>>>>>>         ] 221/312, 3.1 task/s, elapsed: 71s, ETA:    29s[>>>>>>>>>>>>>>>>>>>>>         ] 222/312, 3.1 task/s, elapsed: 72s, ETA:    29s[>>>>>>>>>>>>>>>>>>>>>         ] 223/312, 3.1 task/s, elapsed: 72s, ETA:    29s[>>>>>>>>>>>>>>>>>>>>>         ] 224/312, 3.1 task/s, elapsed: 72s, ETA:    28s[>>>>>>>>>>>>>>>>>>>>>         ] 225/312, 3.1 task/s, elapsed: 73s, ETA:    28s[>>>>>>>>>>>>>>>>>>>>>         ] 226/312, 3.1 task/s, elapsed: 73s, ETA:    28s[>>>>>>>>>>>>>>>>>>>>>         ] 227/312, 3.1 task/s, elapsed: 73s, ETA:    27s[>>>>>>>>>>>>>>>>>>>>>         ] 228/312, 3.1 task/s, elapsed: 74s, ETA:    27s[>>>>>>>>>>>>>>>>>>>>>>        ] 229/312, 3.1 task/s, elapsed: 74s, ETA:    27s[>>>>>>>>>>>>>>>>>>>>>>        ] 230/312, 3.1 task/s, elapsed: 74s, ETA:    26s[>>>>>>>>>>>>>>>>>>>>>>        ] 231/312, 3.1 task/s, elapsed: 74s, ETA:    26s[>>>>>>>>>>>>>>>>>>>>>>        ] 232/312, 3.1 task/s, elapsed: 75s, ETA:    26s[>>>>>>>>>>>>>>>>>>>>>>        ] 233/312, 3.1 task/s, elapsed: 75s, ETA:    25s[>>>>>>>>>>>>>>>>>>>>>>        ] 234/312, 3.1 task/s, elapsed: 75s, ETA:    25s[>>>>>>>>>>>>>>>>>>>>>>        ] 235/312, 3.1 task/s, elapsed: 76s, ETA:    25s[>>>>>>>>>>>>>>>>>>>>>>        ] 236/312, 3.1 task/s, elapsed: 76s, ETA:    24s[>>>>>>>>>>>>>>>>>>>>>>        ] 237/312, 3.1 task/s, elapsed: 76s, ETA:    24s[>>>>>>>>>>>>>>>>>>>>>>        ] 238/312, 3.1 task/s, elapsed: 77s, ETA:    24s[>>>>>>>>>>>>>>>>>>>>>>        ] 239/312, 3.1 task/s, elapsed: 77s, ETA:    23s[>>>>>>>>>>>>>>>>>>>>>>>       ] 240/312, 3.1 task/s, elapsed: 77s, ETA:    23s[>>>>>>>>>>>>>>>>>>>>>>>       ] 241/312, 3.1 task/s, elapsed: 78s, ETA:    23s[>>>>>>>>>>>>>>>>>>>>>>>       ] 242/312, 3.1 task/s, elapsed: 78s, ETA:    23s[>>>>>>>>>>>>>>>>>>>>>>>       ] 243/312, 3.1 task/s, elapsed: 78s, ETA:    22s[>>>>>>>>>>>>>>>>>>>>>>>       ] 244/312, 3.1 task/s, elapsed: 78s, ETA:    22s[>>>>>>>>>>>>>>>>>>>>>>>       ] 245/312, 3.1 task/s, elapsed: 79s, ETA:    22s[>>>>>>>>>>>>>>>>>>>>>>>       ] 246/312, 3.1 task/s, elapsed: 79s, ETA:    21s[>>>>>>>>>>>>>>>>>>>>>>>       ] 247/312, 3.1 task/s, elapsed: 79s, ETA:    21s[>>>>>>>>>>>>>>>>>>>>>>>       ] 248/312, 3.1 task/s, elapsed: 80s, ETA:    21s[>>>>>>>>>>>>>>>>>>>>>>>       ] 249/312, 3.1 task/s, elapsed: 80s, ETA:    20s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 250/312, 3.1 task/s, elapsed: 80s, ETA:    20s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 251/312, 3.1 task/s, elapsed: 81s, ETA:    20s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 252/312, 3.1 task/s, elapsed: 81s, ETA:    19s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 253/312, 3.1 task/s, elapsed: 81s, ETA:    19s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 254/312, 3.1 task/s, elapsed: 82s, ETA:    19s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 255/312, 3.1 task/s, elapsed: 82s, ETA:    18s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 256/312, 3.1 task/s, elapsed: 82s, ETA:    18s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 257/312, 3.1 task/s, elapsed: 82s, ETA:    18s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 258/312, 3.1 task/s, elapsed: 83s, ETA:    17s[>>>>>>>>>>>>>>>>>>>>>>>>      ] 259/312, 3.1 task/s, elapsed: 83s, ETA:    17s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 260/312, 3.1 task/s, elapsed: 83s, ETA:    17s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 261/312, 3.1 task/s, elapsed: 84s, ETA:    16s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 262/312, 3.1 task/s, elapsed: 84s, ETA:    16s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 263/312, 3.1 task/s, elapsed: 84s, ETA:    16s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 264/312, 3.1 task/s, elapsed: 85s, ETA:    15s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 265/312, 3.1 task/s, elapsed: 85s, ETA:    15s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 266/312, 3.1 task/s, elapsed: 85s, ETA:    15s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 267/312, 3.1 task/s, elapsed: 86s, ETA:    14s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 268/312, 3.1 task/s, elapsed: 86s, ETA:    14s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 269/312, 3.1 task/s, elapsed: 86s, ETA:    14s[>>>>>>>>>>>>>>>>>>>>>>>>>     ] 270/312, 3.1 task/s, elapsed: 86s, ETA:    13s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 271/312, 3.1 task/s, elapsed: 87s, ETA:    13s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 272/312, 3.1 task/s, elapsed: 87s, ETA:    13s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 273/312, 3.1 task/s, elapsed: 87s, ETA:    12s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 274/312, 3.1 task/s, elapsed: 88s, ETA:    12s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 275/312, 3.1 task/s, elapsed: 88s, ETA:    12s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 276/312, 3.1 task/s, elapsed: 88s, ETA:    12s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 277/312, 3.1 task/s, elapsed: 89s, ETA:    11s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 278/312, 3.1 task/s, elapsed: 89s, ETA:    11s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 279/312, 3.1 task/s, elapsed: 89s, ETA:    11s[>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 280/312, 3.1 task/s, elapsed: 90s, ETA:    10s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 281/312, 3.1 task/s, elapsed: 90s, ETA:    10s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 282/312, 3.1 task/s, elapsed: 90s, ETA:    10s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 283/312, 3.1 task/s, elapsed: 90s, ETA:     9s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 284/312, 3.1 task/s, elapsed: 91s, ETA:     9s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 285/312, 3.1 task/s, elapsed: 91s, ETA:     9s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 286/312, 3.1 task/s, elapsed: 91s, ETA:     8s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 287/312, 3.1 task/s, elapsed: 92s, ETA:     8s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 288/312, 3.1 task/s, elapsed: 92s, ETA:     8s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 289/312, 3.1 task/s, elapsed: 92s, ETA:     7s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 290/312, 3.1 task/s, elapsed: 93s, ETA:     7s[>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 291/312, 3.1 task/s, elapsed: 93s, ETA:     7s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 292/312, 3.1 task/s, elapsed: 93s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 293/312, 3.1 task/s, elapsed: 94s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 294/312, 3.1 task/s, elapsed: 94s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 295/312, 3.1 task/s, elapsed: 94s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 296/312, 3.1 task/s, elapsed: 94s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 297/312, 3.1 task/s, elapsed: 95s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 298/312, 3.1 task/s, elapsed: 95s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 299/312, 3.1 task/s, elapsed: 95s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 300/312, 3.1 task/s, elapsed: 96s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 301/312, 3.1 task/s, elapsed: 96s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 302/312, 3.1 task/s, elapsed: 96s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 303/312, 3.1 task/s, elapsed: 97s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 304/312, 3.1 task/s, elapsed: 97s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 305/312, 3.1 task/s, elapsed: 97s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 306/312, 3.1 task/s, elapsed: 98s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 307/312, 3.1 task/s, elapsed: 98s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 308/312, 3.1 task/s, elapsed: 98s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 309/312, 3.1 task/s, elapsed: 98s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 310/312, 3.1 task/s, elapsed: 99s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 311/312, 3.1 task/s, elapsed: 99s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 312/312, 3.1 task/s, elapsed: 99s, ETA:     0s

2023-11-15 16:13:28,752 - mmtrack - INFO - Evaluating bbox...
Loading and preparing results...
DONE (t=0.04s)
Creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.94s).
Accumulating evaluation results...
DONE (t=0.58s).
Traceback (most recent call last):
  File "tools/train.py", line 216, in <module>
    main()
  File "tools/train.py", line 205, in main
    train_model(
  File "/home/work/.SUIT/mmtracking/mmtrack/apis/train.py", line 179, in train_model
    runner.run(data_loaders, cfg.workflow, cfg.total_epochs)
  File "/home/work/.local/lib/python3.8/site-packages/mmcv/runner/epoch_based_runner.py", line 136, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/home/work/.local/lib/python3.8/site-packages/mmcv/runner/epoch_based_runner.py", line 58, in train
    self.call_hook('after_train_epoch')
  File "/home/work/.local/lib/python3.8/site-packages/mmcv/runner/base_runner.py", line 317, in call_hook
    getattr(hook, fn_name)(self)
  File "/home/work/.local/lib/python3.8/site-packages/mmcv/runner/hooks/evaluation.py", line 271, in after_train_epoch
    self._do_evaluate(runner)
  File "/home/work/.SUIT/mmtracking/mmtrack/core/evaluation/eval_hooks.py", line 62, in _do_evaluate
    key_score = self.evaluate(runner, results)
  File "/home/work/.local/lib/python3.8/site-packages/mmcv/runner/hooks/evaluation.py", line 367, in evaluate
    eval_res = self.dataloader.dataset.evaluate(
  File "/home/work/.SUIT/mmtracking/mmtrack/datasets/coco_video_dataset.py", line 445, in evaluate
    super_eval_results = super().evaluate(
  File "/home/work/.local/lib/python3.8/site-packages/mmdet/datasets/coco.py", line 642, in evaluate
    eval_results = self.evaluate_det_segm(results, result_files, coco_gt,
  File "/home/work/.local/lib/python3.8/site-packages/mmdet/datasets/coco.py", line 537, in evaluate_det_segm
    cocoEval.summarize()
  File "/usr/local/lib/python3.8/dist-packages/pycocotools/cocoeval.py", line 518, in summarize
    self.stats = summarize()
  File "/usr/local/lib/python3.8/dist-packages/pycocotools/cocoeval.py", line 487, in _summarizeDets
    stats[2] = _summarize(1, iouThr=.75, maxDets=self.params.maxDets[2])
  File "/usr/local/lib/python3.8/dist-packages/pycocotools/cocoeval.py", line 468, in _summarize
    s = s[:,:,:,t,:]
IndexError: index 5 is out of bounds for axis 3 with size 4
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 67468) of binary: /usr/bin/python
Traceback (most recent call last):
  File "/usr/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py", line 193, in <module>
    main()
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py", line 189, in main
    launch(args)
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launch.py", line 174, in launch
    run(args)
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/work/.local/lib/python3.8/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
tools/train.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2023-11-15_16:13:32
  host      : main1
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 67468)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
